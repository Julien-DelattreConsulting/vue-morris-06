{"version":3,"sources":["webpack:///vue-morris.min.js","webpack:///webpack/bootstrap d359ff9b90674de915fd","webpack:///./src/util/converter.js","webpack:///./src/components/chart-mixins.js","webpack:///./~/morris.js/morris.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/morris.js/morris.css?ee78","webpack:///./src/components/area-chart.vue","webpack:///./src/components/bar-chart.vue","webpack:///./src/components/donut-chart.vue","webpack:///./src/components/line-chart.vue","webpack:///area-chart.vue","webpack:///bar-chart.vue","webpack:///donut-chart.vue","webpack:///line-chart.vue","webpack:///./src/index.js","webpack:///./~/morris.js/morris.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/area-chart.vue?0262","webpack:///./src/components/line-chart.vue?91f3","webpack:///./src/components/donut-chart.vue?4fc8","webpack:///./src/components/bar-chart.vue?c919","webpack:///./~/vue-style-loader/addStyles.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Converter","toObject","data","JSON","parse","toBoolean","toInt","parseInt","_converter","_converter2","obj","default","Props","id","type","String","required","Array","barColors","Function","xkey","ykeys","labels","hoverCallback","axes","Boolean","hideHover","stacked","resize","horizontal","grid","gridTextColor","gridTextSize","Number","gridTextFamily","gridTextWeight","colors","formatter","donutType","animate","lineColors","xLabels","lineWidth","pointSize","pointFillColors","pointStrokeColors","ymax","ymin","smooth","parseTime","postUnits","preUnits","dataLabels","dataLabelsPosition","showPercentage","dateFormat","xLabelFormat","yLabelFormat","xLabelAngle","goals","goalStrokeWidth","goalLineColors","events","eventStrokeWidth","eventLineColors","fillOpacity","behaveLikeLine","BarProps","DonutProps","LineProps","AreaProps","prop","ChartMethods","addOption","options","console","log","this","addOptionAsObject","bar","props","methods","donut","line","area","Morris","compStyle","minutesSpecHelper","secondsSpecHelper","__slice","slice","__bind","fn","me","apply","arguments","__hasProp","__extends","child","parent","ctor","constructor","key","__super__","__indexOf","indexOf","item","length","window","el","getComputedStyle","currentStyle","style","EventEmitter","on","handler","handlers","push","fire","args","_i","_len","_ref","_results","commas","num","absnum","intnum","ret","strabsnum","Math","abs","floor","toFixed","replace","toString","pad2","number","extend","objects","properties","val","offset","rect","getBoundingClientRect","top","document","body","scrollTop","left","scrollLeft","css","eventName","addEventListener","attachEvent","off","removeEventListener","detachEvent","dimensions","width","height","innerDimensions","paddingLeft","paddingRight","paddingTop","paddingBottom","Grid","_super","setLabels","hasToShow","debouncedResizeHandler","resizeHandler","mouseupHandler","mousedownHandler","clickHandler","touchHandler","mouseleaveHandler","mousemoveHandler","element","getElementById","Error","position","gridDefaults","defaults","units","raphael","Raphael","elementWidth","elementHeight","dirty","selectFrom","init","setData","rangeSelect","selectionRect","attr","fill","rangeSelectColor","stroke","toBack","hide","webkitTapHighlightColor","postInit","freePosition","gridLineColor","gridStrokeWidth","yLabelAlign","yLabelAlign2","numLines","padding","postUnits2","preUnits2","ymax2","ymin2","regions","regionsColors","goals2","goalStrokeWidth2","goalLineColors2","dataLabelsFamily","dataLabelsSize","dataLabelsWeight","dataLabelsColor","nbYkeys2","destroy","clearTimeout","timeoutId","redraw","e","flatEvents","from","idx","index","maxGoal","minGoal","row","step","step2","to","total","y","ykey","yval","_ref1","clear","hover","cumulative","min","max","src","label","x","parseDate","Date","parseFloat","_j","_len1","_results1","sort","a","b","xmin","xmax","map","yboundary","autoGridLines","_ref3","grid2","boundaryType","currentValue","boundaryOption","suggestedValue","substring","nlines","gmax","gmin","smag","span","unit","ymag","pow","ceil","_calc","angle","bottomOffsets","gridLine","h","w","yLabelWidths","yLabelWidths2","_ref2","right","bottom","measureText","yAxisFormat","yAxisFormat2","dx","dy","dy2","yStart","yEnd","xStart","xEnd","xSize","ySize","calc","transY","transY2","transX","drawGrid","drawRegions","drawEvents","draw","drawGoals","text","tt","rotate","getBBox","remove","yLabelFormat_noUnit","getYAxisLabelX","basePos","basePos2","lineY","pos","_ref4","getXAxisLabelY","xAxisLabelTopPadding","drawXAxisLabel","drawYAxisLabel","drawGridLine","isNaN","color","region","drawRegion","goal","drawGoal","drawGoal2","event","drawEvent","path","xPos","yPos","yaxis","startRange","show","endRange","end","start","hitTest","evt","pageX","_x","pageY","touch","originalEvent","touches","changedTouches","setTimeout","setSize","shown","isColorDark","hex","g","r","rgb","drawDataLabel","drawDataLabelExt","anchor","lineType","label_y","_y2","label_x","date","isecs","msecs","offsetmins","q","secs","match","getTime","getDay","setMonth","UTC","round","Hover","createElement","className","display","appendChild","class","update","html","centre_y","moveTo","content","innerHTML","hoverHeight","hoverWidth","parentHeight","parentWidth","offsetWidth","offsetHeight","Line","hilight","onHoverOut","onHoverMove","onGridClick","pointSizeGrow","extraClassLine","extraClassCircle","pointStrokeWidths","pointSuperimposed","hoverOrdered","hoverReversed","xLabelMargin","verticalGrid","verticalGridHeight","verticalGridStartOffset","verticalGridType","trendLine","trendLineType","trendLineWidth","trendLineWeight","trendLineColors","calcPoints","generatePaths","count","ii","point","v","_k","_l","_len2","_y","_ymax","concat","_ymax2","_len3","_len4","_m","_n","_ref5","lineWidthForSeries","displayHoverForRow","hoverContentForRow","axis","j","jj","max_pos","order","reverse","colorFor","coords","nb","paths","createPath","drawXAxis","drawSeries","drawLabel","lines","prevAngleMargin","prevLabelMargin","ypos","_this","labelText","xpos","labelBox","margin","textBox","transform","cos","PI","sin","drawVerticalGridLine","labelSeries","customLabels","drawGridLineVert","seriesPoints","_drawTrendLine","_drawLineFor","_drawPointFor","circle","drawLinePoint","drawLinePath","datapoints","plots","reg","sum_x","sum_xx","sum_xy","sum_y","t_off_x","t_x","t_y","weight","regression","equation","exp","string","r2","coord","grads","ix","lg","prevCoord","x1","x2","y1","y2","gradients","grad","nextCoord","prevHilight","pointShrinkSeries","pointGrowSeries","sidx","lineColor","lineIndex","rPath","straightPath","pointColor","pointSizeForSeries","pointStrokeWidthForSeries","pointStrokeColorForSeries","animation","dmin","dmax","pxwidth","specName","d0","ddensity","spec","t","LABEL_SPECS","AUTO_LABEL_ORDER","fmt","incr","interval","getFullYear","getMonth","getDate","getHours","getMinutes","setUTCMinutes","getUTCMinutes","getSeconds","setUTCSeconds","getUTCSeconds","decade","setFullYear","year","month","week","setDate","day","hour","30min","15min","10min","5min","minute","30sec","15sec","10sec","5sec","second","Area","areaOptions","areaDefaults","belowArea","areaColors","range","_results2","_drawFillFor","pathBelow","drawFilledPath","fillForSeries","rgb2hsl","hsl","areaIndex","Bar","barSizeRatio","barGap","barOpacity","barHighlightOpacity","highlightSpeed","barRadius","showZero","inBarValue","inBarValueTextColor","inBarValueMinTopMargin","inBarValueRightMargin","rightAxisBar","calcBars","drawBarLine","drawBarPoints","maxSize","size","startPos","barMiddle","barWidth","depth","groupWidth","lastTop","leftPadding","numBars","spaceLeft","zeroPos","seriesBars","barSize","bars","verticalGridCondition","drawBar","verticalGridColor","verticalGridOpacity","fill-opacity","bodyRect","inv","unshift","barColor","opacity","radiusArray","maxRadius","roundedRect","Donut","deselect","select","click","cx","cy","noDataLabel","noDataLabelSize","noDataLabelWeight","backgroundColor","labelColor","C","dist","finalValue","last","max_value","next","p_cos_p0","p_sin_p0","seg","values","segments","DonutSegment","render","text1","drawEmptyDonutLabel","text2","labelAnchor","segment","label1","label2","inner","maxHeightBottom","maxHeightTop","maxWidth","text1bbox","text1scale","text2bbox","text2scale","fontSize","fontWeight","outer","p0","p1","sin_p0","cos_p0","sin_p1","cos_p1","is_long","calcSegment","selectedPath","calcArc","calcArcPoints","r1","ix0","ix1","iy0","iy1","ox0","ox1","oy0","oy1","test","arc","drawDonutArc","drawDonutSegment","stroke-width","fillColor","strokeColor","hoverFunction","clickFunction","leaveFunction","straightDots","split","mouseout","selected","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","staticRenderFns","_scopeId","computed","keys","forEach","locals","Component","_interopRequireDefault","_chartMixins","_chartMixins2","mixins","chart","watch","$nextTick","mounted","createChart","_donutChart","_donutChart2","_barChart","_barChart2","_lineChart","_lineChart2","_areaChart","_areaChart2","VueMorris","DonutChart","BarChart","LineChart","AreaChart","list","result","join","mediaQuery","alreadyImportedModules","_vm","_h","$createElement","_self","_c","attrs","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","removeStyleElement","parentNode","removeChild","splice","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","stringify","memoize","memo","isOldIE","navigator","userAgent","toLowerCase","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","filter"],"mappings":"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","file":"vue-morris.min.js","sourcesContent":["define(\"VueMorris\", [], function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Converter = {\n  toObject: function toObject(data) {\n    if (typeof data === 'string') {\n      return JSON.parse(data);\n    }\n    return data;\n  },\n\n  toBoolean: function toBoolean(data) {\n    if (typeof data === 'string') {\n      return data === 'true';\n    }\n    return data;\n  },\n\n  toInt: function toInt(data) {\n    if (typeof data === 'string') {\n      return parseInt(data);\n    }\n    return data;\n  }\n};\n\nmodule.exports = Converter;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Props = {\n  id: { type: String, required: true },\n  data: { type: [String, Array], required: true },\n  barColors: { type: [String, Array, Function], required: false },\n  xkey: { type: String, required: false, default: 'key' },\n  ykeys: { type: [String, Array], required: false, default: function _default() {\n      return ['value'];\n    } },\n  labels: { type: [String, Array], required: false, default: function _default() {\n      return ['Value'];\n    } },\n  hoverCallback: { type: Function, required: false },\n  axes: { type: [Boolean, String], required: false, default: true },\n  hideHover: { type: String, required: false },\n  stacked: { type: [Boolean, String], required: false },\n  resize: { type: [Boolean, String], required: false },\n  horizontal: { type: [Boolean, String], required: false, default: false },\n  grid: { type: [Boolean, String], required: false, default: true },\n  gridTextColor: { type: String, required: false, default: '#888' },\n  gridTextSize: { type: [Number, String], required: false, default: 12 },\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\n  gridTextWeight: { type: String, required: false, default: 'normal' },\n\n  colors: { type: [String, Array], required: false },\n  formatter: { type: Function, required: false },\n  donutType: { type: String, required: false, default: \"donut\" },\n  animate: { type: Boolean, required: false, default: true },\n\n  lineColors: { type: [String, Array, Function], required: false },\n  xLabels: { type: String, required: false },\n  lineWidth: { type: [Number, String], required: false },\n  pointSize: { type: [Number, String], required: false },\n  pointFillColors: { type: [String, Array], required: false },\n  pointStrokeColors: { type: [String, Array], required: false },\n  ymax: { type: String, required: false },\n  ymin: { type: String, required: false },\n  smooth: { type: [Boolean, String], required: false, default: true },\n  parseTime: { type: [Boolean, String], required: false, default: true },\n  postUnits: { type: String, required: false },\n  preUnits: { type: String, required: false },\n  dataLabels: { type: Boolean, required: false, default: false },\n  dataLabelsPosition: { type: String, required: false, default: \"outside\" },\n  showPercentage: { type: Boolean, required: false, default: true },\n  dateFormat: { type: Function, required: false },\n  xLabelFormat: { type: Function, required: false },\n  yLabelFormat: { type: Function, required: false },\n  xLabelAngle: { type: String, required: false },\n  goals: { type: [String, Array], required: false },\n  goalStrokeWidth: { type: [Number, String], required: false },\n  goalLineColors: { type: [String, Array], required: false },\n  events: { type: [String, Array], required: false },\n  eventStrokeWidth: { type: String, required: false },\n  eventLineColors: { type: [String, Array], required: false },\n  fillOpacity: { type: String, required: false },\n\n  behaveLikeLine: { type: [Boolean, String], required: false, default: false }\n};\n\nvar BarProps = {\n  id: Props.id,\n  data: Props.data,\n  barColors: Props.barColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  hoverCallback: Props.hoverCallback,\n  grid: Props.grid,\n  horizontal: Props.horizontal,\n  axes: Props.axes,\n  hideHover: Props.hideHover,\n  stacked: Props.stacked,\n  resize: Props.resize,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight\n};\n\nvar DonutProps = {\n  id: Props.id,\n  data: Props.data,\n  colors: Props.colors,\n  formatter: Props.formatter,\n  resize: Props.resize,\n  donutType: Props.donutType,\n  animate: Props.animate,\n  dataLabels: Props.dataLabels,\n  dataLabelsPosition: Props.dataLabelsPosition,\n  showPercentage: Props.showPercentage\n};\n\nvar LineProps = {\n  id: Props.id,\n  data: Props.data,\n  resize: Props.resize,\n  lineColors: Props.lineColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabels: Props.xLabels,\n  grid: Props.grid,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight,\n  lineWidth: Props.lineWidth,\n  pointSize: Props.pointSize,\n  pointFillColors: Props.pointFillColors,\n  pointStrokeColors: Props.pointStrokeColors,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  smooth: Props.smooth,\n  hideHover: Props.hideHover,\n  parseTime: Props.parseTime,\n  postUnits: Props.postUnits,\n  preUnits: Props.preUnits,\n  dateFormat: Props.dateFormat,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  xLabelAngle: Props.xLabelAngle,\n  goals: Props.goals,\n  goalStrokeWidth: Props.goalStrokeWidth,\n  goalLineColors: Props.goalLineColors,\n  events: Props.events,\n  eventStrokeWidth: Props.eventStrokeWidth,\n  eventLineColors: Props.eventLineColors,\n  fillOpacity: Props.fillOpacity,\n  hoverCallback: Props.hoverCallback\n};\n\nvar AreaProps = {\n  behaveLikeLine: Props.behaveLikeLine\n};\n\nfor (var prop in LineProps) {\n  if (LineProps.hasOwnProperty(prop)) {\n    AreaProps[prop] = LineProps[prop];\n  }\n}\n\nvar ChartMethods = {\n  addOption: function addOption(name, options) {\n    console.log(\"name: \" + name);\n    console.log(\"this name: \" + this[name]);\n    console.log(\"options\");\n    console.log(options);\n    if (this[name]) {\n      options[name] = this[name];\n    }\n  },\n  addOptionAsObject: function addOptionAsObject(name, options) {\n    if (this[name]) {\n      options[name] = _converter2.default.toObject(this[name]);\n    }\n  }\n};\n\nexports.default = {\n  bar: {\n    props: BarProps,\n    methods: ChartMethods\n  },\n\n  donut: {\n    props: DonutProps,\n    methods: ChartMethods\n  },\n\n  line: {\n    props: LineProps,\n    methods: ChartMethods\n  },\n\n  area: {\n    props: AreaProps,\n    methods: ChartMethods\n  }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/* @license\nmorris.js06 v0.6.3 \nhttps://pierresh.github.io/morris.js/\nCopyright 2019 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var Morris, compStyle, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  compStyle = function(el) {\n    if (getComputedStyle) {\n      return getComputedStyle(el, null);\n    } else if (el.currentStyle) {\n      return el.currentStyle;\n    } else {\n      return el.style;\n    }\n  };\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.extend = function() {\n    var key, object, objects, properties, val, _i, _len;\n    object = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (object == null) {\n      object = {};\n    }\n    for (_i = 0, _len = objects.length; _i < _len; _i++) {\n      properties = objects[_i];\n      if (properties != null) {\n        for (key in properties) {\n          val = properties[key];\n          if (properties.hasOwnProperty(key)) {\n            object[key] = val;\n          }\n        }\n      }\n    }\n    return object;\n  };\n\n  Morris.offset = function(el) {\n    var rect;\n    rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft\n    };\n  };\n\n  Morris.css = function(el, prop) {\n    return compStyle(el)[prop];\n  };\n\n  Morris.on = function(el, eventName, fn) {\n    if (el.addEventListener) {\n      return el.addEventListener(eventName, fn);\n    } else {\n      return el.attachEvent('on' + eventName, fn);\n    }\n  };\n\n  Morris.off = function(el, eventName, fn) {\n    if (el.removeEventListener) {\n      return el.removeEventListener(eventName, fn);\n    } else {\n      return el.detachEvent('on' + eventName, fn);\n    }\n  };\n\n  Morris.dimensions = function(el) {\n    var style;\n    style = compStyle(el);\n    return {\n      width: parseInt(style.width),\n      height: parseInt(style.height)\n    };\n  };\n\n  Morris.innerDimensions = function(el) {\n    var style;\n    style = compStyle(el);\n    return {\n      width: parseInt(style.width) + parseInt(style.paddingLeft) + parseInt(style.paddingRight),\n      height: parseInt(style.height) + parseInt(style.paddingTop) + parseInt(style.paddingBottom)\n    };\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.setLabels = __bind(this.setLabels, this);\n      this.hasToShow = __bind(this.hasToShow, this);\n      this.debouncedResizeHandler = __bind(this.debouncedResizeHandler, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.mouseupHandler = __bind(this.mouseupHandler, this);\n      this.mousedownHandler = __bind(this.mousedownHandler, this);\n      this.clickHandler = __bind(this.clickHandler, this);\n      this.touchHandler = __bind(this.touchHandler, this);\n      this.mouseleaveHandler = __bind(this.mouseleaveHandler, this);\n      this.mousemoveHandler = __bind(this.mousemoveHandler, this);\n      if (typeof options.element === 'string') {\n        this.el = document.getElementById(options.element);\n      } else {\n        this.el = options.element[0] || options.element;\n      }\n      if (this.el == null) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (Morris.css(this.el, 'position') === 'static') {\n        this.el.style.position = 'relative';\n      }\n      this.options = Morris.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      Morris.on(this.el, 'mousemove', this.mousemoveHandler);\n      Morris.on(this.el, 'mouseleave', this.mouseleaveHandler);\n      Morris.on(this.el, 'touchstart touchmove touchend', this.touchHandler);\n      Morris.on(this.el, 'click', this.clickHandler);\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, Morris.innerDimensions(this.el).height).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        Morris.on(this.el, 'mousedown', this.mousedownHandler);\n        Morris.on(this.el, 'mouseup', this.mouseupHandler);\n      }\n      if (this.options.resize) {\n        Morris.on(window, 'resize', this.resizeHandler);\n      }\n      this.el.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      freePosition: false,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: 'auto',\n      yLabelFormat: null,\n      yLabelAlign: 'right',\n      yLabelAlign2: 'left',\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      postUnits2: '',\n      preUnits: '',\n      preUnits2: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      ymax2: 'auto',\n      ymin2: 'auto 0',\n      regions: [],\n      regionsColors: ['#fde4e4'],\n      goals: [],\n      goals2: [],\n      goalStrokeWidth: 1.0,\n      goalStrokeWidth2: 1.0,\n      goalLineColors: ['red'],\n      goalLineColors2: ['red'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: true,\n      dataLabels: true,\n      dataLabelsPosition: 'outside',\n      dataLabelsFamily: 'sans-serif',\n      dataLabelsSize: 12,\n      dataLabelsWeight: 'normal',\n      dataLabelsColor: 'auto',\n      animate: true,\n      nbYkeys2: 0,\n      smooth: true\n    };\n\n    Grid.prototype.destroy = function() {\n      Morris.off(this.el, 'mousemove', this.mousemoveHandler);\n      Morris.off(this.el, 'mouseleave', this.mouseleaveHandler);\n      Morris.off(this.el, 'touchstart touchmove touchend', this.touchHandler);\n      Morris.off(this.el, 'click', this.clickHandler);\n      if (this.options.rangeSelect) {\n        Morris.off(this.el, 'mousedown', this.mousedownHandler);\n        Morris.off(this.el, 'mouseup', this.mouseupHandler);\n      }\n      if (this.options.resize) {\n        window.clearTimeout(this.timeoutId);\n        return Morris.off(window, 'resize', this.resizeHandler);\n      }\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, flatEvents, from, idx, index, maxGoal, minGoal, ret, row, step, step2, to, total, y, ykey, ymax, ymax2, ymin, ymin2, yval, _i, _len, _ref, _ref1;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      ymax2 = this.cumulative ? 0 : null;\n      ymin2 = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      if (this.options.goals2.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals2);\n        maxGoal = Math.max.apply(Math, this.options.goals2);\n        ymin2 = ymin2 != null ? Math.min(ymin2, minGoal) : minGoal;\n        ymax2 = ymax2 != null ? Math.max(ymax2, maxGoal) : maxGoal;\n      }\n      if (this.options.nbYkeys2 > this.options.ykeys.length) {\n        this.options.nbYkeys2 = this.options.ykeys.length;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else if (this.options.freePosition) {\n            ret.x = parseFloat(row[this.options.xkey]);\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if (idx < this.options.ykeys.length - this.options.nbYkeys2) {\n                if ((yval != null) && this.hasToShow(idx)) {\n                  if (this.cumulative) {\n                    total += yval;\n                  } else {\n                    if (ymax != null) {\n                      ymax = Math.max(yval, ymax);\n                      ymin = Math.min(yval, ymin);\n                    } else {\n                      ymax = ymin = yval;\n                    }\n                  }\n                }\n                if (this.cumulative && (total != null)) {\n                  ymax = Math.max(total, ymax);\n                  ymin = Math.min(total, ymin);\n                }\n              } else {\n                if ((yval != null) && this.hasToShow(idx)) {\n                  if (this.cumulative) {\n                    total = yval;\n                  } else {\n                    if (ymax2 != null) {\n                      ymax2 = Math.max(yval, ymax2);\n                      ymin2 = Math.min(yval, ymin2);\n                    } else {\n                      ymax2 = ymin2 = yval;\n                    }\n                  }\n                }\n                if (this.cumulative && (total != null)) {\n                  ymax2 = Math.max(total, ymax2);\n                  ymin2 = Math.min(total, ymin2);\n                }\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime || this.options.freePosition) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          _ref = this.options.events;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            e = _ref[_i];\n            if (e instanceof Array) {\n              from = e[0], to = e[1];\n              this.events.push([Morris.parseDate(from), Morris.parseDate(to)]);\n            } else {\n              this.events.push(Morris.parseDate(e));\n            }\n          }\n        } else {\n          this.events = this.options.events;\n        }\n        flatEvents = this.events.map(function(e) {\n          return e;\n        });\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, flatEvents));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, flatEvents));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      this.ymin2 = this.yboundary('min2', ymin2);\n      this.ymax2 = this.yboundary('max2', ymax2);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (this.ymin2 === this.ymax2) {\n        if (ymin2) {\n          this.ymin2 -= 1;\n        }\n        this.ymax2 += 1;\n      }\n      if (((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin, _ref3 = this.ymax; step > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step) {\n              _results.push(parseFloat(y.toFixed(2)));\n            }\n            return _results;\n          }).call(this);\n        }\n        if (this.options.ymax2 === this.gridDefaults.ymax2 && this.options.ymin2 === this.gridDefaults.ymin2 && this.options.nbYkeys2 > 0) {\n          this.grid2 = this.autoGridLines(this.ymin2, this.ymax2, this.options.numLines);\n          this.ymin2 = Math.min(this.ymin2, this.grid2[0]);\n          this.ymax2 = Math.max(this.ymax2, this.grid2[this.grid2.length - 1]);\n        } else {\n          step2 = (this.ymax2 - this.ymin2) / (this.options.numLines - 1);\n          this.grid2 = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin2, _ref3 = this.ymax2; step2 > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step2) {\n              _results.push(parseFloat(y.toFixed(2)));\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType.substring(0, 3)](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var angle, bottomOffsets, gridLine, h, i, w, yLabelWidths, yLabelWidths2, _ref, _ref1, _ref2;\n      _ref = Morris.dimensions(this.el), w = _ref.width, h = _ref.height;\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') {\n          if (this.grid != null) {\n            yLabelWidths = (function() {\n              var _i, _len, _ref2, _results;\n              _ref2 = this.grid;\n              _results = [];\n              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n                gridLine = _ref2[_i];\n                _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n              }\n              return _results;\n            }).call(this);\n          }\n          if (this.options.nbYkeys2 > 0) {\n            yLabelWidths2 = (function() {\n              var _i, _len, _ref2, _results;\n              _ref2 = this.grid2;\n              _results = [];\n              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n                gridLine = _ref2[_i];\n                _results.push(this.measureText(this.yAxisFormat2(gridLine)).width);\n              }\n              return _results;\n            }).call(this);\n          }\n          if (!this.options.horizontal) {\n            this.left += Math.max.apply(Math, yLabelWidths);\n            if (this.options.nbYkeys2 > 0) {\n              this.right -= Math.max.apply(Math, yLabelWidths2);\n            }\n          } else {\n            this.bottom -= this.options.padding / 2;\n          }\n        }\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'x') {\n          if (!this.options.horizontal) {\n            angle = -this.options.xLabelAngle;\n          } else {\n            angle = -90;\n          }\n          bottomOffsets = (function() {\n            var _i, _ref3, _results;\n            _results = [];\n            for (i = _i = 0, _ref3 = this.data.length; 0 <= _ref3 ? _i < _ref3 : _i > _ref3; i = 0 <= _ref3 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].label, angle).height);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.bottom -= Math.max.apply(Math, bottomOffsets);\n          } else {\n            this.left += Math.max.apply(Math, bottomOffsets);\n          }\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        if (!this.options.horizontal) {\n          this.dx = this.width / (this.xmax - this.xmin);\n          this.dy = this.height / (this.ymax - this.ymin);\n          this.dy2 = this.height / (this.ymax2 - this.ymin2);\n          this.yStart = this.bottom;\n          this.yEnd = this.top;\n          this.xStart = this.left;\n          this.xEnd = this.right;\n          this.xSize = this.width;\n          this.ySize = this.height;\n        } else {\n          this.dx = this.height / (this.xmax - this.xmin);\n          this.dy = this.width / (this.ymax - this.ymin);\n          this.dy2 = this.width / (this.ymax2 - this.ymin2);\n          this.yStart = this.left;\n          this.yEnd = this.right;\n          this.xStart = this.top;\n          this.xEnd = this.bottom;\n          this.xSize = this.height;\n          this.ySize = this.width;\n        }\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin) * this.dy;\n      } else {\n        return this.left + (y - this.ymin) * this.dy;\n      }\n    };\n\n    Grid.prototype.transY2 = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin2) * this.dy2;\n      } else {\n        return this.left + (y - this.ymin2) * this.dy2;\n      }\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.xStart + this.xEnd) / 2;\n      } else {\n        return this.xStart + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawRegions();\n      this.drawEvents();\n      if (this.draw) {\n        this.draw();\n      }\n      this.drawGoals();\n      return this.setLabels();\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label, 0);\n    };\n\n    Grid.prototype.yAxisFormat2 = function(label) {\n      return this.yLabelFormat(label, 1000);\n    };\n\n    Grid.prototype.yLabelFormat = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        if (this.options.nbYkeys2 === 0 || (i <= this.options.ykeys.length - this.options.nbYkeys2 - 1)) {\n          return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n        } else {\n          return \"\" + this.options.preUnits2 + (Morris.commas(label)) + this.options.postUnits2;\n        }\n      }\n    };\n\n    Grid.prototype.yLabelFormat_noUnit = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        return \"\" + (Morris.commas(label));\n      }\n    };\n\n    Grid.prototype.getYAxisLabelX = function() {\n      if (this.options.yLabelAlign === 'right') {\n        return this.left - this.options.padding / 2;\n      } else {\n        return this.options.padding / 2;\n      }\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var basePos, basePos2, lineY, pos, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      if (!this.options.horizontal) {\n        basePos = this.getYAxisLabelX();\n        basePos2 = this.right + this.options.padding / 2;\n      } else {\n        basePos = this.getXAxisLabelY();\n        basePos2 = this.top - (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n      }\n      if (this.grid != null) {\n        _ref1 = this.grid;\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          lineY = _ref1[_i];\n          pos = this.transY(lineY);\n          if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n            if (!this.options.horizontal) {\n              this.drawYAxisLabel(basePos, pos, this.yAxisFormat(lineY), 1);\n            } else {\n              this.drawXAxisLabel(pos, basePos, this.yAxisFormat(lineY));\n            }\n          }\n          if (this.options.grid) {\n            pos = Math.floor(pos) + 0.5;\n            if (!this.options.horizontal) {\n              if (isNaN(this.xEnd)) {\n                this.xEnd = 20;\n              }\n              this.drawGridLine(\"M\" + this.xStart + \",\" + pos + \"H\" + this.xEnd);\n            } else {\n              this.drawGridLine(\"M\" + pos + \",\" + this.xStart + \"V\" + this.xEnd);\n            }\n          }\n        }\n      }\n      if (this.options.nbYkeys2 > 0) {\n        _ref3 = this.grid2;\n        _results = [];\n        for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {\n          lineY = _ref3[_j];\n          pos = this.transY2(lineY);\n          if ((_ref4 = this.options.axes) === true || _ref4 === 'both' || _ref4 === 'y') {\n            if (!this.options.horizontal) {\n              _results.push(this.drawYAxisLabel(basePos2, pos, this.yAxisFormat2(lineY), 2));\n            } else {\n              _results.push(this.drawXAxisLabel(pos, basePos2, this.yAxisFormat2(lineY)));\n            }\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      }\n    };\n\n    Grid.prototype.drawRegions = function() {\n      var color, i, region, _i, _len, _ref, _results;\n      _ref = this.options.regions;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        region = _ref[i];\n        color = this.options.regionsColors[i % this.options.regionsColors.length];\n        _results.push(this.drawRegion(region, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _j, _len, _len1, _ref, _ref1, _results;\n      _ref = this.options.goals;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        this.drawGoal(goal, color);\n      }\n      _ref1 = this.options.goals2;\n      _results = [];\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        goal = _ref1[i];\n        color = this.options.goalLineColors2[i % this.options.goalLineColors2.length];\n        _results.push(this.drawGoal2(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      if (this.events != null) {\n        _ref = this.events;\n        _results = [];\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          event = _ref[i];\n          color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n          _results.push(this.drawEvent(event, color));\n        }\n        return _results;\n      }\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawGoal2 = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY2(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth2);\n    };\n\n    Grid.prototype.drawRegion = function(region, color) {\n      var from, path, to, y;\n      if (region instanceof Array) {\n        from = Math.min(Math.max.apply(Math, region), this.ymax);\n        to = Math.max(Math.min.apply(Math, region), this.ymin);\n        if (!this.options.horizontal) {\n          from = Math.floor(this.transY(from));\n          to = Math.floor(this.transY(to)) - from;\n          return this.raphael.rect(this.xStart, from, this.xEnd - this.xStart, to).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          to = Math.floor(this.transY(to));\n          from = Math.floor(this.transY(from)) - to;\n          return this.raphael.rect(to, this.xStart, from, this.xEnd - this.xStart).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        if (!this.options.horizontal) {\n          y = Math.floor(this.transY(area)) + 1;\n          path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n          return this.raphael.path(path).attr('stroke', color).attr('stroke-width', 2);\n        } else {\n          y = Math.floor(this.transY(area)) + 1;\n          path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n          return this.raphael.path(path).attr('stroke', color).attr('stroke-width', 2);\n        }\n      }\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      var from, path, to, x;\n      if (event instanceof Array) {\n        from = event[0], to = event[1];\n        from = Math.floor(this.transX(from)) + 0.5;\n        to = Math.floor(this.transX(to)) + 0.5;\n        if (!this.options.horizontal) {\n          return this.raphael.rect(from, this.yEnd, to - from, this.yStart - this.yEnd).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          return this.raphael.rect(this.yStart, from, this.yEnd - this.yStart, to - from).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        x = Math.floor(this.transX(event)) + 0.5;\n        if (!this.options.horizontal) {\n          path = \"M\" + x + \",\" + this.yStart + \"V\" + this.yEnd;\n        } else {\n          path = \"M\" + this.yStart + \",\" + x + \"H\" + this.yEnd;\n        }\n        return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n      }\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text, yaxis) {\n      var label;\n      label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n      if (yaxis === 1) {\n        if (this.options.yLabelAlign === 'right') {\n          return label.attr('text-anchor', 'end');\n        } else {\n          return label.attr('text-anchor', 'start');\n        }\n      } else {\n        if (this.options.yLabelAlign2 === 'left') {\n          return label.attr('text-anchor', 'start');\n        } else {\n          return label.attr('text-anchor', 'end');\n        }\n      }\n    };\n\n    Grid.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.mousemoveHandler = function(evt) {\n      var left, offset, right, width, x;\n      offset = Morris.offset(this.el);\n      x = evt.pageX - offset.left;\n      if (this.selectFrom) {\n        left = this.data[this.hitTest(Math.min(x, this.selectFrom))]._x;\n        right = this.data[this.hitTest(Math.max(x, this.selectFrom))]._x;\n        width = right - left;\n        return this.selectionRect.attr({\n          x: left,\n          width: width\n        });\n      } else {\n        return this.fire('hovermove', x, evt.pageY - offset.top);\n      }\n    };\n\n    Grid.prototype.mouseleaveHandler = function(evt) {\n      if (this.selectFrom) {\n        this.selectionRect.hide();\n        this.selectFrom = null;\n      }\n      return this.fire('hoverout');\n    };\n\n    Grid.prototype.touchHandler = function(evt) {\n      var offset, touch;\n      touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n      offset = Morris.offset(this.el);\n      return this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n    };\n\n    Grid.prototype.clickHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      return this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n    };\n\n    Grid.prototype.mousedownHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      return this.startRange(evt.pageX - offset.left);\n    };\n\n    Grid.prototype.mouseupHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      this.endRange(evt.pageX - offset.left);\n      return this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      if (this.timeoutId != null) {\n        window.clearTimeout(this.timeoutId);\n      }\n      return this.timeoutId = window.setTimeout(this.debouncedResizeHandler, 100);\n    };\n\n    Grid.prototype.debouncedResizeHandler = function() {\n      var height, width, _ref;\n      this.timeoutId = null;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      this.raphael.setSize(width, height);\n      this.options.animate = false;\n      return this.redraw();\n    };\n\n    Grid.prototype.hasToShow = function(i) {\n      return this.options.shown === true || this.options.shown[i] === true;\n    };\n\n    Grid.prototype.isColorDark = function(hex) {\n      var b, g, luma, r, rgb;\n      if (hex != null) {\n        hex = hex.substring(1);\n        rgb = parseInt(hex, 16);\n        r = (rgb >> 16) & 0xff;\n        g = (rgb >> 8) & 0xff;\n        b = (rgb >> 0) & 0xff;\n        luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        if (luma >= 128) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    Grid.prototype.drawDataLabel = function(xPos, yPos, text, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', 'middle').attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Grid.prototype.drawDataLabelExt = function(xPos, yPos, text, anchor, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', anchor).attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Grid.prototype.setLabels = function() {\n      var color, index, row, ykey, _i, _len, _ref, _results;\n      if (this.options.dataLabels) {\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push((function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.options.ykeys;\n            _results1 = [];\n            for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {\n              ykey = _ref1[index];\n              if (this.options.dataLabelsColor !== 'auto') {\n                color = this.options.dataLabelsColor;\n              } else if (this.options.stacked === true && this.isColorDark(this.options.barColors[index % this.options.barColors.length]) === true) {\n                color = '#fff';\n              } else {\n                color = '#000';\n              }\n              if ((this.options.lineColors != null) && (this.options.lineType != null)) {\n                if (row.label_y[index] != null) {\n                  this.drawDataLabel(row._x, row.label_y[index], this.yLabelFormat_noUnit(row.y[index], 0), color);\n                }\n                if (row._y2 != null) {\n                  if (row._y2[index] != null) {\n                    _results1.push(this.drawDataLabel(row._x, row._y2[index] - 10, this.yLabelFormat_noUnit(row.y[index], 1000), color));\n                  } else {\n                    _results1.push(void 0);\n                  }\n                } else {\n                  _results1.push(void 0);\n                }\n              } else {\n                if (row.label_y[index] != null) {\n                  if (this.options.horizontal === !true) {\n                    _results1.push(this.drawDataLabel(row.label_x[index], row.label_y[index], this.yLabelFormat_noUnit(row.y[index], index), color));\n                  } else {\n                    _results1.push(this.drawDataLabelExt(row.label_x[index], row.label_y[index], this.yLabelFormat_noUnit(row.y[index]), 'start', color));\n                  }\n                } else if (row._y2[index] != null) {\n                  if (this.options.horizontal === !true) {\n                    _results1.push(this.drawDataLabel(row._x, row._y2[index] - 10, this.yLabelFormat_noUnit(row.y[index], index), color));\n                  } else {\n                    _results1.push(this.drawDataLabelExt(row._y2[index], row._x - 10, this.yLabelFormat_noUnit(row.y[index]), 'middle', color));\n                  }\n                } else {\n                  _results1.push(void 0);\n                }\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = Morris.extend({}, Morris.Hover.defaults, options);\n      this.el = document.createElement('div');\n      this.el.className = this.options[\"class\"];\n      this.el.style.display = 'none';\n      (this.options.parent = this.options.parent[0] || this.options.parent).appendChild(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y, centre_y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y, centre_y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.innerHTML = content;\n    };\n\n    Hover.prototype.moveTo = function(x, y, centre_y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top, _ref;\n      _ref = Morris.innerDimensions(this.options.parent), parentWidth = _ref.width, parentHeight = _ref.height;\n      hoverWidth = this.el.offsetWidth;\n      hoverHeight = this.el.offsetHeight;\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        if (centre_y === true) {\n          top = y - hoverHeight / 2;\n          if (top < 0) {\n            top = 0;\n          }\n        } else {\n          top = y - hoverHeight - 10;\n          if (top < 0) {\n            top = y + 10;\n            if (top + hoverHeight > parentHeight) {\n              top = parentHeight / 2 - hoverHeight / 2;\n            }\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      this.el.style.left = parseInt(left) + \"px\";\n      return this.el.style.top = parseInt(top) + \"px\";\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.style.display = '';\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.style.display = 'none';\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      pointSizeGrow: 3,\n      lineColors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529'],\n      extraClassLine: '',\n      extraClassCircle: '',\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      pointSuperimposed: true,\n      hoverOrdered: false,\n      hoverReversed: false,\n      smooth: true,\n      lineType: {},\n      shown: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 0,\n      verticalGrid: false,\n      verticalGridHeight: 'full',\n      verticalGridStartOffset: 0,\n      verticalGridType: '',\n      trendLine: false,\n      trendLineType: 'linear',\n      trendLineWidth: 2,\n      trendLineWeight: false,\n      trendLineColors: ['#689bc3', '#a2b3bf', '#64b764']\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var count, i, idx, ii, index, point, row, v, y, _i, _j, _k, _l, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3, _results;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii < this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results.push(this.transY(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        }).call(this);\n        row._y2 = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results.push(this.transY2(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        }).call(this);\n        row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if ((y != null) && this.hasToShow(i)) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        }).call(this)));\n        row._ymax2 = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y2;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if ((y != null) && this.hasToShow(i)) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        }).call(this)));\n      }\n      _ref1 = this.data;\n      for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n        row = _ref1[idx];\n        this.data[idx].label_x = [];\n        this.data[idx].label_y = [];\n        for (index = _k = _ref2 = this.options.ykeys.length - 1; _ref2 <= 0 ? _k <= 0 : _k >= 0; index = _ref2 <= 0 ? ++_k : --_k) {\n          if (row._y[index] != null) {\n            this.data[idx].label_x[index] = row._x;\n            this.data[idx].label_y[index] = row._y[index] - 10;\n          }\n          if (row._y2 != null) {\n            if (row._y2[index] != null) {\n              this.data[idx].label_x[index] = row._x;\n              this.data[idx].label_y[index] = row._y2[index] - 10;\n            }\n          }\n        }\n      }\n      if (this.options.pointSuperimposed === !true) {\n        _ref3 = this.data;\n        _results = [];\n        for (_l = 0, _len2 = _ref3.length; _l < _len2; _l++) {\n          row = _ref3[_l];\n          _results.push((function() {\n            var _len3, _len4, _m, _n, _ref4, _ref5, _results1;\n            _ref4 = row._y;\n            _results1 = [];\n            for (idx = _m = 0, _len3 = _ref4.length; _m < _len3; idx = ++_m) {\n              point = _ref4[idx];\n              count = 0;\n              _ref5 = row._y;\n              for (i = _n = 0, _len4 = _ref5.length; _n < _len4; i = ++_n) {\n                v = _ref5[i];\n                if (point === v && typeof point === 'number') {\n                  count++;\n                }\n              }\n              if (count > 1) {\n                row._y[idx] = row._y[idx] + count * (this.lineWidthForSeries(idx));\n                if (this.lineWidthForSeries(idx) > 1) {\n                  _results1.push(row._y[idx] = row._y[idx] - 1);\n                } else {\n                  _results1.push(void 0);\n                }\n              } else {\n                _results1.push(void 0);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var axis, content, j, jj, max, max_pos, order, row, y, yy, _i, _j, _k, _l, _len, _len1, _ref, _ref1, _ref2;\n      row = this.data[index];\n      content = \"\";\n      order = [];\n      if (this.options.hoverOrdered === true) {\n        _ref = row.y;\n        for (jj = _i = 0, _len = _ref.length; _i < _len; jj = ++_i) {\n          yy = _ref[jj];\n          max = null;\n          max_pos = -1;\n          _ref1 = row.y;\n          for (j = _j = 0, _len1 = _ref1.length; _j < _len1; j = ++_j) {\n            y = _ref1[j];\n            if (__indexOf.call(order, j) < 0) {\n              if (max <= y || max === null) {\n                max = y;\n                max_pos = j;\n              }\n            }\n          }\n          order.push(max_pos);\n        }\n      } else {\n        _ref2 = row.y;\n        for (jj = _k = _ref2.length - 1; _k >= 0; jj = _k += -1) {\n          yy = _ref2[jj];\n          order.push(jj);\n        }\n      }\n      if (this.options.hoverReversed === true) {\n        order = order.reverse();\n      }\n      axis = -1;\n      for (_l = order.length - 1; _l >= 0; _l += -1) {\n        j = order[_l];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        if (row.y[j] !== void 0 && axis === -1) {\n          axis = j;\n        }\n        content = (\"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(row.y[j], j)) + \"\\n</div>\") + content;\n      }\n      content = (\"<div class='morris-hover-row-label'>\" + row.label + \"</div>\") + content;\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (axis > this.options.nbYkeys2) {\n        return [content, row._x, row._ymax2];\n      } else {\n        return [content, row._x, row._ymax];\n      }\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, lineType, nb, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          lineType = smooth ? 'smooth' : 'jagged';\n          if (typeof this.options.lineType === \"string\") {\n            lineType = this.options.lineType;\n          } else {\n\n          }\n          if (this.options.lineType[this.options.ykeys[i]] !== void 0) {\n            lineType = this.options.lineType[this.options.ykeys[i]];\n          }\n          nb = this.options.ykeys.length - this.options.nbYkeys2;\n          if (i < nb) {\n            coords = (function() {\n              var _j, _len, _ref2, _results1;\n              _ref2 = this.data;\n              _results1 = [];\n              for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n                r = _ref2[_j];\n                if (r._y[i] !== void 0) {\n                  _results1.push({\n                    x: r._x,\n                    y: r._y[i]\n                  });\n                }\n              }\n              return _results1;\n            }).call(this);\n          } else {\n            coords = (function() {\n              var _j, _len, _ref2, _results1;\n              _ref2 = this.data;\n              _results1 = [];\n              for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n                r = _ref2[_j];\n                if (r._y2[i] !== void 0) {\n                  _results1.push({\n                    x: r._x,\n                    y: r._y2[i]\n                  });\n                }\n              }\n              return _results1;\n            }).call(this);\n          }\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, lineType, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, lines, prevAngleMargin, prevLabelMargin, row, ypos, _i, _j, _len, _len1, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < Morris.dimensions(_this.el).width) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n          if (_this.options.verticalGrid === true) {\n            return _this.drawVerticalGridLine(xpos);\n          }\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else if (this.options.customLabels) {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.options.customLabels;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        drawLabel(l[0], l[1]);\n      }\n      if (typeof this.options.verticalGrid === 'string') {\n        lines = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.verticalGrid);\n        _results = [];\n        for (_j = 0, _len1 = lines.length; _j < _len1; _j++) {\n          l = lines[_j];\n          _results.push(this.drawVerticalGridLine(l[1]));\n        }\n        return _results;\n      }\n    };\n\n    Line.prototype.drawVerticalGridLine = function(xpos) {\n      var yEnd, yStart;\n      xpos = Math.floor(this.transX(xpos)) + 0.5;\n      yStart = this.yStart + this.options.verticalGridStartOffset;\n      if (this.options.verticalGridHeight === 'full') {\n        yEnd = this.yEnd;\n      } else {\n        yEnd = this.yStart - this.options.verticalGridHeight;\n      }\n      return this.drawGridLineVert(\"M\" + xpos + \",\" + yStart + \"V\" + yEnd);\n    };\n\n    Line.prototype.drawGridLineVert = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth).attr('stroke-dasharray', this.options.verticalGridType);\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        if (this.hasToShow(i)) {\n          if (this.options.trendLine !== false && this.options.trendLine === true || this.options.trendLine[i] === true) {\n            this._drawTrendLine(i);\n          }\n          this._drawLineFor(i);\n        }\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        if (this.hasToShow(i)) {\n          _results.push(this._drawPointFor(i));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, idx, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        if (row._y2 != null) {\n          if (row._y2[index] != null) {\n            circle = this.drawLinePoint(row._x, row._y2[index], this.colorFor(row, index, 'point'), index);\n          }\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.prototype._drawTrendLine = function(index) {\n      var a, b, data, datapoints, i, path, plots, reg, sum_x, sum_xx, sum_xy, sum_y, t_off_x, t_x, t_y, val, weight, x, y, _i, _j, _k, _l, _len, _ref;\n      sum_x = 0;\n      sum_y = 0;\n      sum_xx = 0;\n      sum_xy = 0;\n      datapoints = 0;\n      plots = [];\n      _ref = this.data;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        val = _ref[i];\n        x = val.x;\n        y = val.y[index];\n        if (y != null) {\n          plots.push([x, y]);\n          if (this.options.trendLineWeight === false) {\n            weight = 1;\n          } else {\n            weight = this.options.data[i][this.options.trendLineWeight];\n          }\n          datapoints += weight;\n          sum_x += x * weight;\n          sum_y += y * weight;\n          sum_xx += x * x * weight;\n          sum_xy += x * y * weight;\n        }\n      }\n      a = (datapoints * sum_xy - sum_x * sum_y) / (datapoints * sum_xx - sum_x * sum_x);\n      b = (sum_y / datapoints) - ((a * sum_x) / datapoints);\n      data = [{}, {}];\n      data[0].x = this.transX(this.data[0].x);\n      data[0].y = this.transY(this.data[0].x * a + b);\n      data[1].x = this.transX(this.data[this.data.length - 1].x);\n      data[1].y = this.transY(this.data[this.data.length - 1].x * a + b);\n      if (this.options.trendLineType !== 'linear') {\n        if (typeof regression === 'function') {\n          t_off_x = (this.xmax - this.xmin) / 30;\n          data = [];\n          if (this.options.trendLineType === 'polynomial') {\n            reg = regression('polynomial', plots, 2);\n            for (i = _j = 0; _j <= 30; i = ++_j) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[2] * t_x * t_x + reg.equation[1] * t_x + reg.equation[0];\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          } else if (this.options.trendLineType === 'logarithmic') {\n            reg = regression('logarithmic', plots);\n            for (i = _k = 0; _k <= 30; i = ++_k) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[0] + reg.equation[1] * Math.log(t_x);\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          } else if (this.options.trendLineType === 'exponential') {\n            reg = regression('exponential', plots);\n            for (i = _l = 0; _l <= 30; i = ++_l) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[0] + Math.exp(reg.equation[1] * t_x);\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          }\n          console.log('Regression formula is: ' + reg.string + ', r2:' + reg.r2);\n        } else {\n          console.log('Warning: regression() is undefined, please ensure that regression.js is loaded');\n        }\n      }\n      if (!isNaN(a)) {\n        path = Morris.Line.createPath(data, 'jagged', this.bottom);\n        return path = this.raphael.path(path).attr('stroke', this.colorFor(null, index, 'trendLine')).attr('stroke-width', this.options.trendLineWidth);\n      }\n    };\n\n    Line.createPath = function(coords, lineType, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (lineType === 'smooth') {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (lineType === 'smooth') {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'jagged') {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'step') {\n              path += \"L\" + coord.x + \",\" + prevCoord.y;\n              path += \"L\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'stepNoRiser') {\n              path += \"L\" + coord.x + \",\" + prevCoord.y;\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (lineType !== 'smooth' || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i) && this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.hasToShow(i) && this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else if (type === 'trendLine') {\n        return this.options.trendLineColors[sidx % this.options.trendLineColors.length];\n      } else {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      }\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      var ii, rPath, row, straightPath, _i, _len, _ref,\n        _this = this;\n      if (this.options.animate) {\n        straightPath = '';\n        _ref = this.data;\n        for (ii = _i = 0, _len = _ref.length; _i < _len; ii = ++_i) {\n          row = _ref[ii];\n          if (straightPath === '') {\n            if (lineIndex >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (row._y2[lineIndex] != null) {\n                straightPath = 'M' + row._x + ',' + this.transY2(this.ymin2);\n              }\n            } else if (row._y[lineIndex] != null) {\n              straightPath = 'M' + row._x + ',' + this.transY(this.ymin);\n            }\n          } else {\n            if (lineIndex >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (row._y2[lineIndex] != null) {\n                straightPath += ',' + row._x + ',' + this.transY2(this.ymin2);\n                if (this.options.lineType === 'step') {\n                  straightPath += ',' + row._x + ',' + this.transY2(this.ymin2);\n                }\n              }\n            } else if (row._y[lineIndex] != null) {\n              straightPath += ',' + row._x + ',' + this.transY(this.ymin);\n              if (this.options.lineType === 'step') {\n                straightPath += ',' + row._x + ',' + this.transY(this.ymin);\n              }\n            }\n          }\n        }\n        rPath = this.raphael.path(straightPath).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex)).attr('class', this.options.extraClassLine).attr('class', 'line_' + lineIndex);\n        if (this.options.cumulative) {\n          return (function(rPath, path) {\n            return rPath.animate({\n              path: path\n            }, 600, '<>');\n          })(rPath, path);\n        } else {\n          return (function(rPath, path) {\n            return rPath.animate({\n              path: path\n            }, 500, '<>');\n          })(rPath, path);\n        }\n      } else {\n        return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex)).attr('class', this.options.extraClassLine).attr('class', 'line_' + lineIndex);\n      }\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex)).attr('class', this.options.extraClassCircle).attr('class', 'circle_line_' + lineIndex);\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      if (this.pointSizeForSeries(index) === 0) {\n        return;\n      }\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + this.options.pointSizeGrow\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = Morris.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false,\n      belowArea: true,\n      areaColors: []\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = Morris.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var i, idx, index, row, total, y, _i, _j, _len, _len1, _ref, _ref1, _results;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              if (y != null) {\n                _results.push(this.transY(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              if (y != null) {\n                total += y || 0;\n                _results.push(this.transY(total));\n              } else {\n                _results.push(void 0);\n              }\n            }\n          }\n          return _results;\n        }).call(this);\n        row._ymax = Math.max.apply(Math, [].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if (y != null) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        })()));\n      }\n      _ref1 = this.data;\n      _results = [];\n      for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n        row = _ref1[idx];\n        this.data[idx].label_x = [];\n        this.data[idx].label_y = [];\n        _results.push((function() {\n          var _k, _ref2, _results1;\n          _results1 = [];\n          for (index = _k = _ref2 = this.options.ykeys.length - 1; _ref2 <= 0 ? _k <= 0 : _k >= 0; index = _ref2 <= 0 ? ++_k : --_k) {\n            if (row._y[index] != null) {\n              this.data[idx].label_x[index] = row._x;\n              this.data[idx].label_y[index] = row._y[index] - 10;\n            }\n            if (row._y2 != null) {\n              if (row._y2[index] != null) {\n                this.data[idx].label_x[index] = row._x;\n                _results1.push(this.data[idx].label_y[index] = row._y2[index] - 10);\n              } else {\n                _results1.push(void 0);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _l, _len, _len1, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n      }\n      _results2 = [];\n      for (_l = 0, _len1 = range.length; _l < _len1; _l++) {\n        i = range[_l];\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var coords, path, pathBelow, r;\n      path = this.paths[index];\n      if (path !== null) {\n        if (this.options.belowArea === true) {\n          path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n          return this.drawFilledPath(path, this.fillForSeries(index), index);\n        } else {\n          coords = (function() {\n            var _i, _ref, _results;\n            _ref = this.data;\n            _results = [];\n            for (_i = _ref.length - 1; _i >= 0; _i += -1) {\n              r = _ref[_i];\n              if (r._y[0] !== void 0) {\n                _results.push({\n                  x: r._x,\n                  y: r._y[0]\n                });\n              }\n            }\n            return _results;\n          }).call(this);\n          pathBelow = Morris.Line.createPath(coords, 'smooth', this.bottom);\n          path = path + \"L\" + pathBelow.slice(1);\n          return this.drawFilledPath(path, this.fillForSeries(index), index);\n        }\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      if (this.options.areaColors.length === 0) {\n        this.options.areaColors = this.options.lineColors;\n      }\n      color = Raphael.rgb2hsl(this.options.areaColors[i % this.options.areaColors.length]);\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill, areaIndex) {\n      var coords, pathBelow, r, rPath, straightPath,\n        _this = this;\n      if (this.options.animate) {\n        coords = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            r = _ref[_i];\n            if (r._y[areaIndex] !== void 0) {\n              _results.push({\n                x: r._x,\n                y: this.transY(0)\n              });\n            }\n          }\n          return _results;\n        }).call(this);\n        straightPath = Morris.Line.createPath(coords, 'smooth', this.bottom);\n        if (this.options.belowArea === true) {\n          straightPath = straightPath + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        } else {\n          coords = (function() {\n            var _i, _ref, _results;\n            _ref = this.data;\n            _results = [];\n            for (_i = _ref.length - 1; _i >= 0; _i += -1) {\n              r = _ref[_i];\n              if (r._y[areaIndex] !== void 0) {\n                _results.push({\n                  x: r._x,\n                  y: this.transY(0)\n                });\n              }\n            }\n            return _results;\n          }).call(this);\n          pathBelow = Morris.Line.createPath(coords, 'smooth', this.bottom);\n          straightPath = straightPath + \"L\" + pathBelow.slice(1);\n        }\n        straightPath += 'Z';\n        rPath = this.raphael.path(straightPath).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n      }\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, Morris.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529'],\n      barOpacity: 1.0,\n      barHighlightOpacity: 1.0,\n      highlightSpeed: 150,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 0,\n      horizontal: false,\n      stacked: false,\n      shown: true,\n      showZero: true,\n      inBarValue: false,\n      inBarValueTextColor: 'white',\n      inBarValueMinTopMargin: 1,\n      inBarValueRightMargin: 4,\n      rightAxisBar: false\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, ii, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.xStart + this.xSize * (idx + 0.5) / this.data.length;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii < this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results1.push(this.transY(y));\n              } else {\n                _results1.push(null);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._y2 = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results1.push(this.transY2(y));\n              } else {\n                _results1.push(null);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.rightAxisBar === !true) {\n        this.drawBarLine();\n        return this.drawBarPoints();\n      }\n    };\n\n    Bar.prototype.drawBarLine = function() {\n      var coord, coords, dim, g, grads, i, ii, ix, lg, nb, path, prevCoord, r, rPath, straightPath, x1, x2, y1, y2, _i, _j, _len, _len1, _ref, _results,\n        _this = this;\n      nb = this.options.ykeys.length - this.options.nbYkeys2;\n      _ref = this.options.ykeys.slice(nb, this.options.ykeys.length);\n      _results = [];\n      for (ii = _i = 0, _len = _ref.length; _i < _len; ii = _i += 1) {\n        dim = _ref[ii];\n        path = \"\";\n        straightPath = \"\";\n        if (this.options.horizontal === !true) {\n          coords = (function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.data;\n            _results1 = [];\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              r = _ref1[_j];\n              if (r._y2[nb + ii] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y2[nb + ii]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n        } else {\n          coords = (function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.data;\n            _results1 = [];\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              r = _ref1[_j];\n              if (r._y2[nb + ii] !== void 0) {\n                _results1.push({\n                  x: r._y2[nb + ii],\n                  y: r._x\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n        }\n        if (this.options.smooth) {\n          grads = Morris.Line.gradients(coords);\n        }\n        prevCoord = {\n          y: null\n        };\n        for (i = _j = 0, _len1 = coords.length; _j < _len1; i = ++_j) {\n          coord = coords[i];\n          if (coord.y != null) {\n            if (prevCoord.y != null) {\n              if (this.options.smooth && this.options.horizontal === !true) {\n                g = grads[i];\n                lg = grads[i - 1];\n                ix = (coord.x - prevCoord.x) / 4;\n                x1 = prevCoord.x + ix;\n                y1 = Math.min(this.bottom, prevCoord.y + ix * lg);\n                x2 = coord.x - ix;\n                y2 = Math.min(this.bottom, coord.y - ix * g);\n                path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n              } else {\n                path += \"L\" + coord.x + \",\" + coord.y;\n              }\n              if (this.options.horizontal === true) {\n                straightPath += 'L' + this.transY(0) + ',' + coord.y;\n              } else {\n                straightPath += 'L' + coord.x + ',' + this.transY(0);\n              }\n            } else {\n              if (!this.options.smooth || (grads[i] != null)) {\n                path += \"M\" + coord.x + \",\" + coord.y;\n                if (this.options.horizontal === true) {\n                  straightPath += 'M' + this.transY(0) + ',' + coord.y;\n                } else {\n                  straightPath += 'M' + coord.x + ',' + this.transY(0);\n                }\n              }\n            }\n          }\n          prevCoord = coord;\n        }\n        if (path !== \"\") {\n          if (this.options.animate) {\n            rPath = this.raphael.path(straightPath).attr('stroke', this.options.barColors[nb + ii]).attr('stroke-width', 3);\n            _results.push((function(rPath, path) {\n              return rPath.animate({\n                path: path\n              }, 500, '<>');\n            })(rPath, path));\n          } else {\n            _results.push(rPath = this.raphael.path(path).attr('stroke', this.options.barColors[nb + ii]).attr('stroke-width', 3));\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawBarPoints = function() {\n      var circle, dim, idx, ii, nb, row, _i, _len, _ref, _results;\n      nb = this.options.ykeys.length - this.options.nbYkeys2;\n      this.seriesPoints = [];\n      _ref = this.options.ykeys.slice(nb, this.options.ykeys.length);\n      _results = [];\n      for (ii = _i = 0, _len = _ref.length; _i < _len; ii = _i += 1) {\n        dim = _ref[ii];\n        this.seriesPoints[ii] = [];\n        _results.push((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = this.data;\n          _results1 = [];\n          for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n            row = _ref1[idx];\n            circle = null;\n            if (row._y2[nb + ii] != null) {\n              if (this.options.horizontal === !true) {\n                circle = this.raphael.circle(row._x, row._y2[nb + ii], 4).attr('fill', this.options.barColors[nb + ii]).attr('stroke-width', 1).attr('stroke', '#ffffff');\n                _results1.push(this.seriesPoints[ii].push(circle));\n              } else {\n                circle = this.raphael.circle(row._y2[nb + ii], row._x, 4).attr('fill', this.options.barColors[nb + ii]).attr('stroke-width', 1).attr('stroke', '#ffffff');\n                _results1.push(this.seriesPoints[ii].push(circle));\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var angle, basePos, height, i, label, labelBox, margin, maxSize, offset, prevAngleMargin, prevLabelMargin, row, size, startPos, textBox, width, _i, _ref, _ref1, _results;\n      if (!this.options.horizontal) {\n        basePos = this.getXAxisLabelY();\n      } else {\n        basePos = this.getYAxisLabelX();\n      }\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        if (!this.options.horizontal) {\n          label = this.drawXAxisLabel(row._x, basePos, row.label);\n        } else {\n          label = this.drawYAxisLabel(basePos, row._x - 0.5 * this.options.gridTextSize, row.label, 1);\n        }\n        if (!this.options.horizontal) {\n          angle = this.options.xLabelAngle;\n        } else {\n          angle = 0;\n        }\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-angle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (angle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(angle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        _ref1 = Morris.dimensions(this.el), width = _ref1.width, height = _ref1.height;\n        if (!this.options.horizontal) {\n          startPos = labelBox.x;\n          size = labelBox.width;\n          maxSize = width;\n        } else {\n          startPos = labelBox.y;\n          size = labelBox.height;\n          maxSize = height;\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= startPos + size || (prevAngleMargin != null) && prevAngleMargin >= startPos) && startPos >= 0 && (startPos + size) < maxSize) {\n          if (angle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(angle * Math.PI / 180.0);\n            prevAngleMargin = startPos - margin;\n          }\n          if (!this.options.horizontal) {\n            _results.push(prevLabelMargin = startPos - this.options.xLabelMargin);\n          } else {\n            _results.push(prevLabelMargin = startPos);\n          }\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.getXAxisLabelY = function() {\n      return this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barMiddle, barWidth, bottom, depth, groupWidth, i, idx, lastTop, left, leftPadding, nb, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos, _i, _ref;\n      this.seriesBars = [];\n      groupWidth = this.xSize / this.options.data.length;\n      if (this.options.stacked) {\n        numBars = 1;\n      } else {\n        numBars = 0;\n        for (i = _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i)) {\n            numBars += 1;\n          }\n        }\n      }\n      if (this.options.stacked === !true && this.options.rightAxisBar === false) {\n        numBars = numBars - this.options.nbYkeys2;\n      }\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _j, _len, _ref1, _results;\n        _ref1 = this.data;\n        _results = [];\n        for (idx = _j = 0, _len = _ref1.length; _j < _len; idx = ++_j) {\n          row = _ref1[idx];\n          this.data[idx].label_x = [];\n          this.data[idx].label_y = [];\n          this.seriesBars[idx] = [];\n          lastTop = 0;\n          if (this.options.rightAxisBar === true) {\n            nb = row._y.length;\n          } else {\n            nb = row._y.length - this.options.nbYkeys2;\n          }\n          _results.push((function() {\n            var _k, _len1, _ref2, _results1;\n            _ref2 = row._y.slice(0, nb);\n            _results1 = [];\n            for (sidx = _k = 0, _len1 = _ref2.length; _k < _len1; sidx = ++_k) {\n              ypos = _ref2[sidx];\n              if (row._y[sidx] != null) {\n                ypos = row._y[sidx];\n              } else if (row._y2[sidx] != null) {\n                ypos = row._y2[sidx];\n              }\n              if (!this.hasToShow(sidx)) {\n                continue;\n              }\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.xStart + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  if (!this.options.horizontal) {\n                    this.drawBar(this.xStart + idx * groupWidth, this.yEnd, groupWidth, this.ySize, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  } else {\n                    this.drawBar(this.yStart, this.xStart + idx * groupWidth, this.ySize, groupWidth, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  }\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                if (!this.options.horizontal) {\n                  lastTop += size;\n                  if (size === 0 && this.options.showZero) {\n                    size = 1;\n                  }\n                  this.seriesBars[idx][sidx] = this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  if (this.options.dataLabels) {\n                    if (this.options.dataLabelsPosition === 'inside' || (this.options.stacked && this.options.dataLabelsPosition !== 'force_outside')) {\n                      depth = size / 2;\n                    } else {\n                      depth = -7;\n                    }\n                    if (size > this.options.dataLabelsSize || !this.options.stacked || this.options.dataLabelsPosition === 'force_outside') {\n                      this.data[idx].label_x[sidx] = left + barWidth / 2;\n                      _results1.push(this.data[idx].label_y[sidx] = top + depth);\n                    } else {\n                      _results1.push(void 0);\n                    }\n                  } else {\n                    _results1.push(void 0);\n                  }\n                } else {\n                  lastTop -= size;\n                  if (size === 0) {\n                    size = 1;\n                  }\n                  this.seriesBars[idx][sidx] = this.drawBar(top, left, size, barWidth, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  if (this.options.dataLabels) {\n                    if (this.options.stacked || this.options.dataLabelsPosition === 'inside') {\n                      this.data[idx].label_x[sidx] = top + size / 2;\n                      this.data[idx].label_y[sidx] = left + barWidth / 2;\n                    } else {\n                      this.data[idx].label_x[sidx] = top + size + 5;\n                      this.data[idx].label_y[sidx] = left + barWidth / 2;\n                    }\n                  }\n                  if (this.options.inBarValue && barWidth > this.options.gridTextSize + 2 * this.options.inBarValueMinTopMargin) {\n                    barMiddle = left + 0.5 * barWidth;\n                    _results1.push(this.raphael.text(bottom - this.options.inBarValueRightMargin, barMiddle, this.yLabelFormat(row.y[sidx], sidx)).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.inBarValueTextColor).attr('text-anchor', 'end'));\n                  } else {\n                    _results1.push(void 0);\n                  }\n                }\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.hilight = function(index) {\n      var i, y, _i, _j, _len, _len1, _ref, _ref1;\n      if (this.seriesBars && this.seriesBars[this.prevHilight] && this.prevHilight !== null && this.prevHilight !== index) {\n        _ref = this.seriesBars[this.prevHilight];\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          y = _ref[i];\n          if (y) {\n            y.animate({\n              'fill-opacity': this.options.barOpacity\n            }, this.options.highlightSpeed);\n          }\n        }\n      }\n      if (this.seriesBars && this.seriesBars[index] && index !== null && this.prevHilight !== index) {\n        _ref1 = this.seriesBars[index];\n        for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n          y = _ref1[i];\n          if (y) {\n            y.animate({\n              'fill-opacity': this.options.barHighlightOpacity\n            }, this.options.highlightSpeed);\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label,\n          src: row.src\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x, y) {\n      var bodyRect, pos;\n      if (this.data.length === 0) {\n        return null;\n      }\n      if (!this.options.horizontal) {\n        pos = x;\n      } else {\n        bodyRect = document.body.getBoundingClientRect();\n        pos = y + bodyRect.top;\n      }\n      pos = Math.max(Math.min(pos, this.xEnd), this.xStart);\n      return Math.min(this.data.length - 1, Math.floor((pos - this.xStart) / (this.xSize / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x, y);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x, y);\n      this.hilight(index);\n      if (index != null) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n      } else {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      this.hilight(-1);\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, inv, j, jj, row, x, y, _i, _j, _len, _len1, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      inv = [];\n      _ref = row.y;\n      for (jj = _i = 0, _len = _ref.length; _i < _len; jj = ++_i) {\n        y = _ref[jj];\n        inv.unshift(y);\n      }\n      for (jj = _j = 0, _len1 = inv.length; _j < _len1; jj = ++_j) {\n        y = inv[jj];\n        j = row.y.length - 1 - jj;\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (!this.options.horizontal) {\n        x = this.left + (index + 0.5) * this.width / this.data.length;\n        return [content, x];\n      } else {\n        x = this.left + 0.5 * this.width;\n        y = this.top + (index + 0.5) * this.height / this.data.length;\n        return [content, x, y, true];\n      }\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (this.options.animate) {\n        if (this.options.horizontal) {\n          if (maxRadius === 0 || maxRadius > height) {\n            path = this.raphael.rect(this.transY(0), yPos, 0, height).animate({\n              x: xPos,\n              width: width\n            }, 500);\n          } else {\n            path = this.raphael.path(this.roundedRect(this.transY(0), yPos + height, width, 0, radiusArray).animate({\n              y: yPos,\n              height: height\n            }, 500));\n          }\n        } else {\n          if (maxRadius === 0 || maxRadius > height) {\n            path = this.raphael.rect(xPos, this.transY(0), width, 0).animate({\n              y: yPos,\n              height: height\n            }, 500);\n          } else {\n            path = this.raphael.path(this.roundedRect(xPos, this.transY(0), width, 0, radiusArray).animate({\n              y: yPos,\n              height: height\n            }, 500));\n          }\n        }\n      } else {\n        if (maxRadius === 0 || maxRadius > height) {\n          path = this.raphael.rect(xPos, yPos, width, height);\n        } else {\n          path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n        }\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529', '#44a1f8', '#81d453', '#f0bb40', '#eb3f25', '#b45184', '#5f5f5f'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      padding: 0,\n      formatter: Morris.commas,\n      resize: true,\n      dataLabels: false,\n      dataLabelsPosition: 'inside',\n      dataLabelsFamily: 'sans-serif',\n      dataLabelsSize: 12,\n      dataLabelsWeight: 'normal',\n      dataLabelsColor: 'auto',\n      noDataLabel: 'No data for this chart',\n      noDataLabelSize: 21,\n      noDataLabelWeight: 'bold',\n      donutType: 'donut',\n      animate: true,\n      showPercentage: false,\n      postUnits: '',\n      preUnits: ''\n    };\n\n    function Donut(options) {\n      this.debouncedResizeHandler = __bind(this.debouncedResizeHandler, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var cx, cy, height, width, _ref;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = Morris.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = document.getElementById(options.element);\n      } else {\n        this.el = options.element[0] || options.element;\n      }\n      if (this.el === null) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      this.raphael = new Raphael(this.el);\n      if (options.data === void 0 || options.data.length === 0) {\n        _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n        cx = width / 2;\n        cy = height / 2;\n        this.raphael.text(cx, cy, this.options.noDataLabel).attr('text-anchor', 'middle').attr('font-size', this.options.noDataLabelSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.noDataLabelWeight).attr('fill', this.options.dataLabelsColor);\n        return;\n      }\n      if (this.options.resize) {\n        Morris.on(window, 'resize', this.resizeHandler);\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.destroy = function() {\n      if (this.options.resize) {\n        window.clearTimeout(this.timeoutId);\n        return Morris.off(window, 'resize', this.resizeHandler);\n      }\n    };\n\n    Donut.prototype.redraw = function() {\n      var C, color, cx, cy, dist, finalValue, height, i, idx, label_x, label_y, last, max_value, min, next, p_cos_p0, p_sin_p0, seg, total, value, w, width, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3, _results;\n      this.raphael.clear();\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      cx = width / 2;\n      cy = height / 2;\n      w = (Math.min(cx, cy) - 10) / 3 - this.options.padding;\n      total = 0;\n      _ref1 = this.values;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        value = _ref1[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref2 = this.values;\n      for (i = _j = 0, _len1 = _ref2.length; _j < _len1; i = ++_j) {\n        value = _ref2[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael, this.options);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        seg.on('mouseout', this.deselect);\n        if (parseFloat(seg.raphael.height) > parseFloat(height)) {\n          dist = height * 2 - this.options.padding * 7;\n        } else {\n          dist = seg.raphael.height - this.options.padding * 7;\n        }\n        if (this.options.dataLabels && this.values.length > 1) {\n          p_sin_p0 = Math.sin((last + next) / 2);\n          p_cos_p0 = Math.cos((last + next) / 2);\n          if (this.options.dataLabelsPosition === 'inside') {\n            if (this.options.donutType === 'pie') {\n              label_x = parseFloat(cx) + parseFloat(dist * 0.30 * p_sin_p0);\n              label_y = parseFloat(cy) + parseFloat(dist * 0.30 * p_cos_p0);\n            } else {\n              label_x = parseFloat(cx) + parseFloat(dist * 0.39 * p_sin_p0);\n              label_y = parseFloat(cy) + parseFloat(dist * 0.39 * p_cos_p0);\n            }\n          } else {\n            label_x = parseFloat(cx) + parseFloat((dist - 9) * 0.5 * p_sin_p0);\n            label_y = parseFloat(cy) + parseFloat((dist - 9) * 0.5 * p_cos_p0);\n          }\n          if (this.options.dataLabelsColor !== 'auto') {\n            color = this.options.dataLabelsColor;\n          } else if (this.options.dataLabelsPosition === 'inside' && this.isColorDark(this.options.colors[i]) === true) {\n            color = '#fff';\n          } else {\n            color = '#000';\n          }\n          if (this.options.showPercentage) {\n            finalValue = Math.round(parseFloat(value) / parseFloat(total) * 100) + '%';\n            this.drawDataLabelExt(label_x, label_y, finalValue, color);\n          } else {\n            this.drawDataLabelExt(label_x, label_y, this.options.preUnits + value + this.options.postUnits, color);\n          }\n        }\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      if (this.options.donutType === 'donut') {\n        _ref3 = this.values;\n        _results = [];\n        for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {\n          value = _ref3[_k];\n          if (value === max_value) {\n            this.select(idx);\n            break;\n          }\n          _results.push(idx += 1);\n        }\n        return _results;\n      }\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.drawDataLabel = function(xPos, yPos, text, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', 'middle').attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', this.options.dataLabelsColor);\n    };\n\n    Donut.prototype.drawDataLabelExt = function(xPos, yPos, text, color) {\n      var label, labelAnchor;\n      if (this.options.dataLabelsPosition === 'inside') {\n        labelAnchor = 'middle';\n      } else if (xPos > this.raphael.width / 2) {\n        labelAnchor = 'start';\n      } else if (xPos > this.raphael.width * 0.55 && xPos < this.raphael.width * 0.45) {\n        labelAnchor = 'middle';\n      } else {\n        labelAnchor = 'end';\n      }\n      return label = this.raphael.text(xPos, yPos, text, color).attr('text-anchor', labelAnchor).attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      if (this.options.donutType === 'donut') {\n        return this.setLabels(row.label, this.options.formatter(row.value, row));\n      }\n    };\n\n    Donut.prototype.deselect = function(idx) {\n      var s, _i, _len, _ref, _results;\n      _ref = this.segments;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        _results.push(s.deselect());\n      }\n      return _results;\n    };\n\n    Donut.prototype.isColorDark = function(hex) {\n      var b, g, luma, r, rgb;\n      if (hex != null) {\n        hex = hex.substring(1);\n        rgb = parseInt(hex, 16);\n        r = (rgb >> 16) & 0xff;\n        g = (rgb >> 8) & 0xff;\n        b = (rgb >> 0) & 0xff;\n        luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        if (luma >= 128) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var height, inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale, width, _ref;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      inner = (Math.min(width / 2, height / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      if (this.timeoutId != null) {\n        window.clearTimeout(this.timeoutId);\n      }\n      return this.timeoutId = window.setTimeout(this.debouncedResizeHandler, 100);\n    };\n\n    Donut.prototype.debouncedResizeHandler = function() {\n      var height, width, _ref;\n      this.timeoutId = null;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      this.raphael.setSize(width, height);\n      this.options.animate = false;\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael, options) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.options = options;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      if (this.options.donutType === 'pie') {\n        return (\"M\" + ox0 + \",\" + oy0) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",0,\" + ox1 + \",\" + oy1) + (\"L\" + this.cx + \",\" + this.cy) + \"Z\";\n      } else {\n        return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n      }\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      if (!/NaN/.test(this.hilight)) {\n        this.arc = this.drawDonutArc(this.hilight, this.color);\n      }\n      if (!/NaN/.test(this.path)) {\n        return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n          return _this.fire('hover', _this.index);\n        }, function() {\n          return _this.fire('click', _this.index);\n        }, function() {\n          return _this.fire('mouseout', _this.index);\n        });\n      }\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      var rPath,\n        _this = this;\n      if (this.options.animate) {\n        rPath = this.raphael.path(\"M\" + this.cx + \",\" + this.cy + \"Z\").attr({\n          stroke: color,\n          'stroke-width': 2,\n          opacity: 0\n        });\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        return this.raphael.path(path).attr({\n          stroke: color,\n          'stroke-width': 2,\n          opacity: 0\n        });\n      }\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction, leaveFunction) {\n      var rPath, straightDots, straightPath,\n        _this = this;\n      if (this.options.animate && this.options.donutType === 'pie') {\n        straightPath = path;\n        straightPath = path.replace('A', ',');\n        straightPath = straightPath.replace('M', '');\n        straightPath = straightPath.replace('C', ',');\n        straightPath = straightPath.replace('Z', '');\n        straightDots = straightPath.split(',');\n        if (this.options.donutType === 'pie') {\n          straightPath = 'M' + straightDots[0] + ',' + straightDots[1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + 'Z';\n        } else {\n          straightPath = 'M' + straightDots[0] + ',' + straightDots[1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + 'Z';\n        }\n        rPath = this.raphael.path(straightPath).attr({\n          fill: fillColor,\n          stroke: strokeColor,\n          'stroke-width': 3\n        }).hover(hoverFunction).click(clickFunction).mouseout(leaveFunction);\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        if (this.options.donutType === 'pie') {\n          return this.raphael.path(path).attr({\n            fill: fillColor,\n            stroke: strokeColor,\n            'stroke-width': 3\n          }).hover(hoverFunction).click(clickFunction).mouseout(leaveFunction);\n        } else {\n          return this.raphael.path(path).attr({\n            fill: fillColor,\n            stroke: strokeColor,\n            'stroke-width': 3\n          }).hover(hoverFunction).click(clickFunction);\n        }\n      }\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        if (this.seg != null) {\n          this.seg.animate({\n            path: this.selectedPath\n          }, 150, '<>');\n          this.arc.animate({\n            opacity: 1\n          }, 150, '<>');\n          return this.selected = true;\n        }\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(20)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(9),\n  /* template */\n  __webpack_require__(16),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(10),\n  /* template */\n  __webpack_require__(19),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(11),\n  /* template */\n  __webpack_require__(18),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(12),\n  /* template */\n  __webpack_require__(17),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'area-chart',\n\n  mixins: [_chartMixins2.default.area],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['lineColors']) {\n          _this.chart.options['lineColors'] = _converter2.default.toObject(_this['lineColors']);\n        }\n\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: _converter2.default.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: _converter2.default.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity,\n      behaveLikeLine: this.behaveLikeLine\n    };\n\n    this.addOptionAsObject('lineColors', options);\n    this.addOption('xLabels', options);\n    this.addOptionAsObject('pointFillColors', options);\n    this.addOptionAsObject('pointStrokeColors', options);\n    this.addOption('dateFormat', options);\n    this.addOption('xLabelFormat', options);\n    this.addOption('yLabelFormat', options);\n    this.addOptionAsObject('goals', options);\n    this.addOptionAsObject('goalLineColors', options);\n    this.addOptionAsObject('events', options);\n    this.addOptionAsObject('eventLineColors', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Area(options);\n  }\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'bar-chart',\n\n  mixins: [_chartMixins2.default.bar],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['barColors']) {\n          _this.chart.options['barColors'] = _converter2.default.toObject(_this['barColors']);\n        }\n\n        _this.chart.setData(_this.data);\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      labels: _converter2.default.toObject(this.labels),\n      resize: _converter2.default.toBoolean(this.resize),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      axes: _converter2.default.toBoolean(this.axes),\n      ymax: this.ymax,\n      ymin: this.ymin,\n      hideHover: this.hideHover,\n      horizontal: _converter2.default.toBoolean(this.horizontal),\n      stacked: _converter2.default.toBoolean(this.stacked),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize\n    };\n\n    this.addOptionAsObject('barColors', options);\n    this.addOption('xLabelFormat', options);\n    this.addOption('yLabelFormat', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Bar(options);\n  }\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: \"donut-chart\",\n\n  mixins: [_chartMixins2.default.donut],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        if (_this.data && _this.data.length > 0 && !_this.chart) {\n          _this.createChart();\n        }\n\n        if (_this.chart) {\n          if (_this[\"colors\"]) {\n            _this.chart.options[\"colors\"] = _converter2.default.toObject(_this[\"colors\"]);\n          }\n\n          _this.chart.setData(_converter2.default.toObject(_this.data));\n        }\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    if (this.data && this.data.length > 0) {\n      this.createChart();\n    }\n  },\n\n\n  methods: {\n    createChart: function createChart() {\n      var options = {\n        element: this.id,\n        data: _converter2.default.toObject(this.data),\n        resize: _converter2.default.toBoolean(this.resize),\n        donutType: this.donutType,\n        dataLabels: _converter2.default.toBoolean(this.dataLabels),\n        dataLabelsPosition: this.dataLabelsPosition,\n        showPercentage: _converter2.default.toBoolean(this.showPercentage)\n      };\n\n      this.addOptionAsObject(\"colors\", options);\n      this.addOption(\"formatter\", options);\n      this.addOption(\"donutType\", options);\n      this.addOption(\"dataLabels\", options);\n      this.addOption(\"dataLabelsPosition\", options);\n      this.addOption(\"showPercentage\", options);\n\n      this.chart = Morris.Donut(options);\n    }\n  }\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'line-chart',\n\n  mixins: [_chartMixins2.default.line],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['lineColors']) {\n          _this.chart.options['lineColors'] = _converter2.default.toObject(_this['lineColors']);\n        }\n\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: _converter2.default.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: _converter2.default.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity\n    };\n\n    this.addOptionAsObject('lineColors', options);\n    this.addOption('xLabels', options);\n    this.addOptionAsObject('pointFillColors', options);\n    this.addOptionAsObject('pointStrokeColors', options);\n    this.addOption('dateFormat', options);\n    this.addOption('xLabelFormat', options);\n    this.addOption('yLabelFormat', options);\n    this.addOptionAsObject('goals', options);\n    this.addOptionAsObject('goalLineColors', options);\n    this.addOptionAsObject('events', options);\n    this.addOptionAsObject('eventLineColors', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Line(options);\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _donutChart = __webpack_require__(7);\n\nvar _donutChart2 = _interopRequireDefault(_donutChart);\n\nvar _barChart = __webpack_require__(6);\n\nvar _barChart2 = _interopRequireDefault(_barChart);\n\nvar _lineChart = __webpack_require__(8);\n\nvar _lineChart2 = _interopRequireDefault(_lineChart);\n\nvar _areaChart = __webpack_require__(5);\n\nvar _areaChart2 = _interopRequireDefault(_areaChart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VueMorris = {\n  DonutChart: _donutChart2.default, BarChart: _barChart2.default, LineChart: _lineChart2.default, AreaChart: _areaChart2.default\n};\n\nmodule.exports = VueMorris;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}@media print{.morris-hover{display:none}}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n/***/ })\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// vue-morris.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d359ff9b90674de915fd","const Converter = {\n  toObject: function (data) {\n    if (typeof data === 'string') {\n      return JSON.parse(data)\n    }\n    return data\n  },\n\n  toBoolean: function (data) {\n    if (typeof data === 'string') {\n      return data === 'true'\n    }\n    return data\n  },\n\n  toInt: function(data) {\n    if (typeof data === 'string') {\n      return parseInt(data)\n    }\n    return data\n  },\n}\n\nmodule.exports = Converter\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/converter.js","import Converter from '../util/converter'\n\n/**\n * All properties used by the charts with their constraints.\n */\nconst Props = {\n  id: { type: String, required: true },\n  data: { type: [String, Array], required: true },\n  barColors: { type: [String, Array, Function], required: false },\n  xkey: { type: String, required: false, default: 'key' },\n  ykeys: { type: [String, Array], required: false, default: function _default() { return ['value']; } },\n  labels: { type: [String, Array], required: false, default: function _default() { return ['Value']; } },\n  hoverCallback: { type: Function, required: false },\n  axes: { type: [Boolean, String], required: false, default: true },\n  hideHover: { type: String, required: false },\n  stacked: { type: [Boolean, String], required: false },\n  resize: { type: [Boolean, String], required: false },\n  horizontal: { type: [Boolean, String], required: false, default: false },\n  grid: { type: [Boolean, String], required: false, default: true },\n  gridTextColor: { type: String, required: false, default: '#888' },\n  gridTextSize: { type: [Number, String], required: false, default: 12 },\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\n  gridTextWeight: { type: String, required: false, default: 'normal' },\n\n  colors: { type: [String, Array], required: false },\n  formatter: { type: Function, required: false },\n  donutType: { type: String, required: false, default: \"donut\" },\n  animate: { type: Boolean, required: false, default: true },\n\n  lineColors: { type: [String, Array, Function], required: false },\n  xLabels: { type: String, required: false },\n  lineWidth: { type: [Number, String], required: false },\n  pointSize: { type: [Number, String], required: false },\n  pointFillColors: { type: [String, Array], required: false },\n  pointStrokeColors: { type: [String, Array], required: false },\n  ymax: { type: String, required: false },\n  ymin: { type: String, required: false },\n  smooth: { type: [Boolean, String], required: false, default: true },\n  parseTime: { type: [Boolean, String], required: false, default: true },\n  postUnits: { type: String, required: false },\n  preUnits: { type: String, required: false },\n  dataLabels: { type: Boolean, required: false, default: false },\n  dataLabelsPosition: { type: String, required: false, default: \"outside\" },\n  showPercentage: { type: Boolean, required: false, default: true },\n  dateFormat: { type: Function, required: false },\n  xLabelFormat: { type: Function, required: false },\n  yLabelFormat: { type: Function, required: false },\n  xLabelAngle: { type: String, required: false },\n  goals: { type: [String, Array], required: false },\n  goalStrokeWidth: { type: [Number, String], required: false },\n  goalLineColors: { type: [String, Array], required: false },\n  events: { type: [String, Array], required: false },\n  eventStrokeWidth: { type: String, required: false },\n  eventLineColors: { type: [String, Array], required: false },\n  fillOpacity: { type: String, required: false },\n\n  behaveLikeLine: { type: [Boolean, String], required: false, default: false }\n}\n\n/**\n * Properties of a bar chart.\n */\nconst BarProps = {\n  id: Props.id,\n  data: Props.data,\n  barColors: Props.barColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  hoverCallback: Props.hoverCallback,\n  grid: Props.grid,\n  horizontal: Props.horizontal,\n  axes: Props.axes,\n  hideHover: Props.hideHover,\n  stacked: Props.stacked,\n  resize: Props.resize,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight\n}\n\n/**\n * Properties of a donut chart.\n */\nconst DonutProps = {\n  id: Props.id,\n  data: Props.data,\n  colors: Props.colors,\n  formatter: Props.formatter,\n  resize: Props.resize,\n  donutType: Props.donutType,\n  animate: Props.animate,\n  dataLabels: Props.dataLabels,\n  dataLabelsPosition: Props.dataLabelsPosition,\n  showPercentage: Props.showPercentage\n}\n\n/**\n * Properties of a line chart.\n */\nconst LineProps = {\n  id: Props.id,\n  data: Props.data,\n  resize: Props.resize,\n  lineColors: Props.lineColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabels: Props.xLabels,\n  grid: Props.grid,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight,\n  lineWidth: Props.lineWidth,\n  pointSize: Props.pointSize,\n  pointFillColors: Props.pointFillColors,\n  pointStrokeColors: Props.pointStrokeColors,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  smooth: Props.smooth,\n  hideHover: Props.hideHover,\n  parseTime: Props.parseTime,\n  postUnits: Props.postUnits,\n  preUnits: Props.preUnits,\n  dateFormat: Props.dateFormat,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  xLabelAngle: Props.xLabelAngle,\n  goals: Props.goals,\n  goalStrokeWidth: Props.goalStrokeWidth,\n  goalLineColors: Props.goalLineColors,\n  events: Props.events,\n  eventStrokeWidth: Props.eventStrokeWidth,\n  eventLineColors: Props.eventLineColors,\n  fillOpacity: Props.fillOpacity,\n  hoverCallback: Props.hoverCallback\n}\n\n/**\n * Properties of an area chart.\n */\nconst AreaProps = {\n  behaveLikeLine: Props.behaveLikeLine\n}\n\nfor (var prop in LineProps) {\n  if (LineProps.hasOwnProperty(prop)) {\n    AreaProps[prop] = LineProps[prop];\n  }\n}\n\n/**\n * Common methods for all the charts.\n */\nconst ChartMethods = {\n  addOption(name, options) {\n    console.log(\"name: \" + name)\n    console.log(\"this name: \" + this[name])\n    console.log(\"options\")\n    console.log(options)\n    if (this[name]) {\n      options[name] = this[name]\n    }\n  },\n\n  addOptionAsObject(name, options) {\n    if (this[name]) {\n      options[name] = Converter.toObject(this[name])\n    }\n  }\n}\n\nexport default {\n  bar: {\n    props: BarProps,\n    methods: ChartMethods\n  },\n\n  donut: {\n    props: DonutProps,\n    methods: ChartMethods\n  },\n\n  line: {\n    props: LineProps,\n    methods: ChartMethods\n  },\n\n  area: {\n    props: AreaProps,\n    methods: ChartMethods\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chart-mixins.js","/* @license\nmorris.js06 v0.6.3 \nhttps://pierresh.github.io/morris.js/\nCopyright 2019 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var Morris, compStyle, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  compStyle = function(el) {\n    if (getComputedStyle) {\n      return getComputedStyle(el, null);\n    } else if (el.currentStyle) {\n      return el.currentStyle;\n    } else {\n      return el.style;\n    }\n  };\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.extend = function() {\n    var key, object, objects, properties, val, _i, _len;\n    object = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (object == null) {\n      object = {};\n    }\n    for (_i = 0, _len = objects.length; _i < _len; _i++) {\n      properties = objects[_i];\n      if (properties != null) {\n        for (key in properties) {\n          val = properties[key];\n          if (properties.hasOwnProperty(key)) {\n            object[key] = val;\n          }\n        }\n      }\n    }\n    return object;\n  };\n\n  Morris.offset = function(el) {\n    var rect;\n    rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft\n    };\n  };\n\n  Morris.css = function(el, prop) {\n    return compStyle(el)[prop];\n  };\n\n  Morris.on = function(el, eventName, fn) {\n    if (el.addEventListener) {\n      return el.addEventListener(eventName, fn);\n    } else {\n      return el.attachEvent('on' + eventName, fn);\n    }\n  };\n\n  Morris.off = function(el, eventName, fn) {\n    if (el.removeEventListener) {\n      return el.removeEventListener(eventName, fn);\n    } else {\n      return el.detachEvent('on' + eventName, fn);\n    }\n  };\n\n  Morris.dimensions = function(el) {\n    var style;\n    style = compStyle(el);\n    return {\n      width: parseInt(style.width),\n      height: parseInt(style.height)\n    };\n  };\n\n  Morris.innerDimensions = function(el) {\n    var style;\n    style = compStyle(el);\n    return {\n      width: parseInt(style.width) + parseInt(style.paddingLeft) + parseInt(style.paddingRight),\n      height: parseInt(style.height) + parseInt(style.paddingTop) + parseInt(style.paddingBottom)\n    };\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.setLabels = __bind(this.setLabels, this);\n      this.hasToShow = __bind(this.hasToShow, this);\n      this.debouncedResizeHandler = __bind(this.debouncedResizeHandler, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.mouseupHandler = __bind(this.mouseupHandler, this);\n      this.mousedownHandler = __bind(this.mousedownHandler, this);\n      this.clickHandler = __bind(this.clickHandler, this);\n      this.touchHandler = __bind(this.touchHandler, this);\n      this.mouseleaveHandler = __bind(this.mouseleaveHandler, this);\n      this.mousemoveHandler = __bind(this.mousemoveHandler, this);\n      if (typeof options.element === 'string') {\n        this.el = document.getElementById(options.element);\n      } else {\n        this.el = options.element[0] || options.element;\n      }\n      if (this.el == null) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (Morris.css(this.el, 'position') === 'static') {\n        this.el.style.position = 'relative';\n      }\n      this.options = Morris.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      Morris.on(this.el, 'mousemove', this.mousemoveHandler);\n      Morris.on(this.el, 'mouseleave', this.mouseleaveHandler);\n      Morris.on(this.el, 'touchstart touchmove touchend', this.touchHandler);\n      Morris.on(this.el, 'click', this.clickHandler);\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, Morris.innerDimensions(this.el).height).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        Morris.on(this.el, 'mousedown', this.mousedownHandler);\n        Morris.on(this.el, 'mouseup', this.mouseupHandler);\n      }\n      if (this.options.resize) {\n        Morris.on(window, 'resize', this.resizeHandler);\n      }\n      this.el.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      freePosition: false,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: 'auto',\n      yLabelFormat: null,\n      yLabelAlign: 'right',\n      yLabelAlign2: 'left',\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      postUnits2: '',\n      preUnits: '',\n      preUnits2: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      ymax2: 'auto',\n      ymin2: 'auto 0',\n      regions: [],\n      regionsColors: ['#fde4e4'],\n      goals: [],\n      goals2: [],\n      goalStrokeWidth: 1.0,\n      goalStrokeWidth2: 1.0,\n      goalLineColors: ['red'],\n      goalLineColors2: ['red'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: true,\n      dataLabels: true,\n      dataLabelsPosition: 'outside',\n      dataLabelsFamily: 'sans-serif',\n      dataLabelsSize: 12,\n      dataLabelsWeight: 'normal',\n      dataLabelsColor: 'auto',\n      animate: true,\n      nbYkeys2: 0,\n      smooth: true\n    };\n\n    Grid.prototype.destroy = function() {\n      Morris.off(this.el, 'mousemove', this.mousemoveHandler);\n      Morris.off(this.el, 'mouseleave', this.mouseleaveHandler);\n      Morris.off(this.el, 'touchstart touchmove touchend', this.touchHandler);\n      Morris.off(this.el, 'click', this.clickHandler);\n      if (this.options.rangeSelect) {\n        Morris.off(this.el, 'mousedown', this.mousedownHandler);\n        Morris.off(this.el, 'mouseup', this.mouseupHandler);\n      }\n      if (this.options.resize) {\n        window.clearTimeout(this.timeoutId);\n        return Morris.off(window, 'resize', this.resizeHandler);\n      }\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, flatEvents, from, idx, index, maxGoal, minGoal, ret, row, step, step2, to, total, y, ykey, ymax, ymax2, ymin, ymin2, yval, _i, _len, _ref, _ref1;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      ymax2 = this.cumulative ? 0 : null;\n      ymin2 = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      if (this.options.goals2.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals2);\n        maxGoal = Math.max.apply(Math, this.options.goals2);\n        ymin2 = ymin2 != null ? Math.min(ymin2, minGoal) : minGoal;\n        ymax2 = ymax2 != null ? Math.max(ymax2, maxGoal) : maxGoal;\n      }\n      if (this.options.nbYkeys2 > this.options.ykeys.length) {\n        this.options.nbYkeys2 = this.options.ykeys.length;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else if (this.options.freePosition) {\n            ret.x = parseFloat(row[this.options.xkey]);\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if (idx < this.options.ykeys.length - this.options.nbYkeys2) {\n                if ((yval != null) && this.hasToShow(idx)) {\n                  if (this.cumulative) {\n                    total += yval;\n                  } else {\n                    if (ymax != null) {\n                      ymax = Math.max(yval, ymax);\n                      ymin = Math.min(yval, ymin);\n                    } else {\n                      ymax = ymin = yval;\n                    }\n                  }\n                }\n                if (this.cumulative && (total != null)) {\n                  ymax = Math.max(total, ymax);\n                  ymin = Math.min(total, ymin);\n                }\n              } else {\n                if ((yval != null) && this.hasToShow(idx)) {\n                  if (this.cumulative) {\n                    total = yval;\n                  } else {\n                    if (ymax2 != null) {\n                      ymax2 = Math.max(yval, ymax2);\n                      ymin2 = Math.min(yval, ymin2);\n                    } else {\n                      ymax2 = ymin2 = yval;\n                    }\n                  }\n                }\n                if (this.cumulative && (total != null)) {\n                  ymax2 = Math.max(total, ymax2);\n                  ymin2 = Math.min(total, ymin2);\n                }\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime || this.options.freePosition) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          _ref = this.options.events;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            e = _ref[_i];\n            if (e instanceof Array) {\n              from = e[0], to = e[1];\n              this.events.push([Morris.parseDate(from), Morris.parseDate(to)]);\n            } else {\n              this.events.push(Morris.parseDate(e));\n            }\n          }\n        } else {\n          this.events = this.options.events;\n        }\n        flatEvents = this.events.map(function(e) {\n          return e;\n        });\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, flatEvents));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, flatEvents));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      this.ymin2 = this.yboundary('min2', ymin2);\n      this.ymax2 = this.yboundary('max2', ymax2);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (this.ymin2 === this.ymax2) {\n        if (ymin2) {\n          this.ymin2 -= 1;\n        }\n        this.ymax2 += 1;\n      }\n      if (((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin, _ref3 = this.ymax; step > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step) {\n              _results.push(parseFloat(y.toFixed(2)));\n            }\n            return _results;\n          }).call(this);\n        }\n        if (this.options.ymax2 === this.gridDefaults.ymax2 && this.options.ymin2 === this.gridDefaults.ymin2 && this.options.nbYkeys2 > 0) {\n          this.grid2 = this.autoGridLines(this.ymin2, this.ymax2, this.options.numLines);\n          this.ymin2 = Math.min(this.ymin2, this.grid2[0]);\n          this.ymax2 = Math.max(this.ymax2, this.grid2[this.grid2.length - 1]);\n        } else {\n          step2 = (this.ymax2 - this.ymin2) / (this.options.numLines - 1);\n          this.grid2 = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin2, _ref3 = this.ymax2; step2 > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step2) {\n              _results.push(parseFloat(y.toFixed(2)));\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType.substring(0, 3)](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var angle, bottomOffsets, gridLine, h, i, w, yLabelWidths, yLabelWidths2, _ref, _ref1, _ref2;\n      _ref = Morris.dimensions(this.el), w = _ref.width, h = _ref.height;\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') {\n          if (this.grid != null) {\n            yLabelWidths = (function() {\n              var _i, _len, _ref2, _results;\n              _ref2 = this.grid;\n              _results = [];\n              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n                gridLine = _ref2[_i];\n                _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n              }\n              return _results;\n            }).call(this);\n          }\n          if (this.options.nbYkeys2 > 0) {\n            yLabelWidths2 = (function() {\n              var _i, _len, _ref2, _results;\n              _ref2 = this.grid2;\n              _results = [];\n              for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n                gridLine = _ref2[_i];\n                _results.push(this.measureText(this.yAxisFormat2(gridLine)).width);\n              }\n              return _results;\n            }).call(this);\n          }\n          if (!this.options.horizontal) {\n            this.left += Math.max.apply(Math, yLabelWidths);\n            if (this.options.nbYkeys2 > 0) {\n              this.right -= Math.max.apply(Math, yLabelWidths2);\n            }\n          } else {\n            this.bottom -= this.options.padding / 2;\n          }\n        }\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'x') {\n          if (!this.options.horizontal) {\n            angle = -this.options.xLabelAngle;\n          } else {\n            angle = -90;\n          }\n          bottomOffsets = (function() {\n            var _i, _ref3, _results;\n            _results = [];\n            for (i = _i = 0, _ref3 = this.data.length; 0 <= _ref3 ? _i < _ref3 : _i > _ref3; i = 0 <= _ref3 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].label, angle).height);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.bottom -= Math.max.apply(Math, bottomOffsets);\n          } else {\n            this.left += Math.max.apply(Math, bottomOffsets);\n          }\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        if (!this.options.horizontal) {\n          this.dx = this.width / (this.xmax - this.xmin);\n          this.dy = this.height / (this.ymax - this.ymin);\n          this.dy2 = this.height / (this.ymax2 - this.ymin2);\n          this.yStart = this.bottom;\n          this.yEnd = this.top;\n          this.xStart = this.left;\n          this.xEnd = this.right;\n          this.xSize = this.width;\n          this.ySize = this.height;\n        } else {\n          this.dx = this.height / (this.xmax - this.xmin);\n          this.dy = this.width / (this.ymax - this.ymin);\n          this.dy2 = this.width / (this.ymax2 - this.ymin2);\n          this.yStart = this.left;\n          this.yEnd = this.right;\n          this.xStart = this.top;\n          this.xEnd = this.bottom;\n          this.xSize = this.height;\n          this.ySize = this.width;\n        }\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin) * this.dy;\n      } else {\n        return this.left + (y - this.ymin) * this.dy;\n      }\n    };\n\n    Grid.prototype.transY2 = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin2) * this.dy2;\n      } else {\n        return this.left + (y - this.ymin2) * this.dy2;\n      }\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.xStart + this.xEnd) / 2;\n      } else {\n        return this.xStart + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawRegions();\n      this.drawEvents();\n      if (this.draw) {\n        this.draw();\n      }\n      this.drawGoals();\n      return this.setLabels();\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label, 0);\n    };\n\n    Grid.prototype.yAxisFormat2 = function(label) {\n      return this.yLabelFormat(label, 1000);\n    };\n\n    Grid.prototype.yLabelFormat = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        if (this.options.nbYkeys2 === 0 || (i <= this.options.ykeys.length - this.options.nbYkeys2 - 1)) {\n          return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n        } else {\n          return \"\" + this.options.preUnits2 + (Morris.commas(label)) + this.options.postUnits2;\n        }\n      }\n    };\n\n    Grid.prototype.yLabelFormat_noUnit = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        return \"\" + (Morris.commas(label));\n      }\n    };\n\n    Grid.prototype.getYAxisLabelX = function() {\n      if (this.options.yLabelAlign === 'right') {\n        return this.left - this.options.padding / 2;\n      } else {\n        return this.options.padding / 2;\n      }\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var basePos, basePos2, lineY, pos, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      if (!this.options.horizontal) {\n        basePos = this.getYAxisLabelX();\n        basePos2 = this.right + this.options.padding / 2;\n      } else {\n        basePos = this.getXAxisLabelY();\n        basePos2 = this.top - (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n      }\n      if (this.grid != null) {\n        _ref1 = this.grid;\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          lineY = _ref1[_i];\n          pos = this.transY(lineY);\n          if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n            if (!this.options.horizontal) {\n              this.drawYAxisLabel(basePos, pos, this.yAxisFormat(lineY), 1);\n            } else {\n              this.drawXAxisLabel(pos, basePos, this.yAxisFormat(lineY));\n            }\n          }\n          if (this.options.grid) {\n            pos = Math.floor(pos) + 0.5;\n            if (!this.options.horizontal) {\n              if (isNaN(this.xEnd)) {\n                this.xEnd = 20;\n              }\n              this.drawGridLine(\"M\" + this.xStart + \",\" + pos + \"H\" + this.xEnd);\n            } else {\n              this.drawGridLine(\"M\" + pos + \",\" + this.xStart + \"V\" + this.xEnd);\n            }\n          }\n        }\n      }\n      if (this.options.nbYkeys2 > 0) {\n        _ref3 = this.grid2;\n        _results = [];\n        for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {\n          lineY = _ref3[_j];\n          pos = this.transY2(lineY);\n          if ((_ref4 = this.options.axes) === true || _ref4 === 'both' || _ref4 === 'y') {\n            if (!this.options.horizontal) {\n              _results.push(this.drawYAxisLabel(basePos2, pos, this.yAxisFormat2(lineY), 2));\n            } else {\n              _results.push(this.drawXAxisLabel(pos, basePos2, this.yAxisFormat2(lineY)));\n            }\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      }\n    };\n\n    Grid.prototype.drawRegions = function() {\n      var color, i, region, _i, _len, _ref, _results;\n      _ref = this.options.regions;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        region = _ref[i];\n        color = this.options.regionsColors[i % this.options.regionsColors.length];\n        _results.push(this.drawRegion(region, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _j, _len, _len1, _ref, _ref1, _results;\n      _ref = this.options.goals;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        this.drawGoal(goal, color);\n      }\n      _ref1 = this.options.goals2;\n      _results = [];\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        goal = _ref1[i];\n        color = this.options.goalLineColors2[i % this.options.goalLineColors2.length];\n        _results.push(this.drawGoal2(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      if (this.events != null) {\n        _ref = this.events;\n        _results = [];\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          event = _ref[i];\n          color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n          _results.push(this.drawEvent(event, color));\n        }\n        return _results;\n      }\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawGoal2 = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY2(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth2);\n    };\n\n    Grid.prototype.drawRegion = function(region, color) {\n      var from, path, to, y;\n      if (region instanceof Array) {\n        from = Math.min(Math.max.apply(Math, region), this.ymax);\n        to = Math.max(Math.min.apply(Math, region), this.ymin);\n        if (!this.options.horizontal) {\n          from = Math.floor(this.transY(from));\n          to = Math.floor(this.transY(to)) - from;\n          return this.raphael.rect(this.xStart, from, this.xEnd - this.xStart, to).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          to = Math.floor(this.transY(to));\n          from = Math.floor(this.transY(from)) - to;\n          return this.raphael.rect(to, this.xStart, from, this.xEnd - this.xStart).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        if (!this.options.horizontal) {\n          y = Math.floor(this.transY(area)) + 1;\n          path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n          return this.raphael.path(path).attr('stroke', color).attr('stroke-width', 2);\n        } else {\n          y = Math.floor(this.transY(area)) + 1;\n          path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n          return this.raphael.path(path).attr('stroke', color).attr('stroke-width', 2);\n        }\n      }\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      var from, path, to, x;\n      if (event instanceof Array) {\n        from = event[0], to = event[1];\n        from = Math.floor(this.transX(from)) + 0.5;\n        to = Math.floor(this.transX(to)) + 0.5;\n        if (!this.options.horizontal) {\n          return this.raphael.rect(from, this.yEnd, to - from, this.yStart - this.yEnd).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          return this.raphael.rect(this.yStart, from, this.yEnd - this.yStart, to - from).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        x = Math.floor(this.transX(event)) + 0.5;\n        if (!this.options.horizontal) {\n          path = \"M\" + x + \",\" + this.yStart + \"V\" + this.yEnd;\n        } else {\n          path = \"M\" + this.yStart + \",\" + x + \"H\" + this.yEnd;\n        }\n        return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n      }\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text, yaxis) {\n      var label;\n      label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n      if (yaxis === 1) {\n        if (this.options.yLabelAlign === 'right') {\n          return label.attr('text-anchor', 'end');\n        } else {\n          return label.attr('text-anchor', 'start');\n        }\n      } else {\n        if (this.options.yLabelAlign2 === 'left') {\n          return label.attr('text-anchor', 'start');\n        } else {\n          return label.attr('text-anchor', 'end');\n        }\n      }\n    };\n\n    Grid.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.mousemoveHandler = function(evt) {\n      var left, offset, right, width, x;\n      offset = Morris.offset(this.el);\n      x = evt.pageX - offset.left;\n      if (this.selectFrom) {\n        left = this.data[this.hitTest(Math.min(x, this.selectFrom))]._x;\n        right = this.data[this.hitTest(Math.max(x, this.selectFrom))]._x;\n        width = right - left;\n        return this.selectionRect.attr({\n          x: left,\n          width: width\n        });\n      } else {\n        return this.fire('hovermove', x, evt.pageY - offset.top);\n      }\n    };\n\n    Grid.prototype.mouseleaveHandler = function(evt) {\n      if (this.selectFrom) {\n        this.selectionRect.hide();\n        this.selectFrom = null;\n      }\n      return this.fire('hoverout');\n    };\n\n    Grid.prototype.touchHandler = function(evt) {\n      var offset, touch;\n      touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n      offset = Morris.offset(this.el);\n      return this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n    };\n\n    Grid.prototype.clickHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      return this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n    };\n\n    Grid.prototype.mousedownHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      return this.startRange(evt.pageX - offset.left);\n    };\n\n    Grid.prototype.mouseupHandler = function(evt) {\n      var offset;\n      offset = Morris.offset(this.el);\n      this.endRange(evt.pageX - offset.left);\n      return this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      if (this.timeoutId != null) {\n        window.clearTimeout(this.timeoutId);\n      }\n      return this.timeoutId = window.setTimeout(this.debouncedResizeHandler, 100);\n    };\n\n    Grid.prototype.debouncedResizeHandler = function() {\n      var height, width, _ref;\n      this.timeoutId = null;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      this.raphael.setSize(width, height);\n      this.options.animate = false;\n      return this.redraw();\n    };\n\n    Grid.prototype.hasToShow = function(i) {\n      return this.options.shown === true || this.options.shown[i] === true;\n    };\n\n    Grid.prototype.isColorDark = function(hex) {\n      var b, g, luma, r, rgb;\n      if (hex != null) {\n        hex = hex.substring(1);\n        rgb = parseInt(hex, 16);\n        r = (rgb >> 16) & 0xff;\n        g = (rgb >> 8) & 0xff;\n        b = (rgb >> 0) & 0xff;\n        luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        if (luma >= 128) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    Grid.prototype.drawDataLabel = function(xPos, yPos, text, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', 'middle').attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Grid.prototype.drawDataLabelExt = function(xPos, yPos, text, anchor, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', anchor).attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Grid.prototype.setLabels = function() {\n      var color, index, row, ykey, _i, _len, _ref, _results;\n      if (this.options.dataLabels) {\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push((function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.options.ykeys;\n            _results1 = [];\n            for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {\n              ykey = _ref1[index];\n              if (this.options.dataLabelsColor !== 'auto') {\n                color = this.options.dataLabelsColor;\n              } else if (this.options.stacked === true && this.isColorDark(this.options.barColors[index % this.options.barColors.length]) === true) {\n                color = '#fff';\n              } else {\n                color = '#000';\n              }\n              if ((this.options.lineColors != null) && (this.options.lineType != null)) {\n                if (row.label_y[index] != null) {\n                  this.drawDataLabel(row._x, row.label_y[index], this.yLabelFormat_noUnit(row.y[index], 0), color);\n                }\n                if (row._y2 != null) {\n                  if (row._y2[index] != null) {\n                    _results1.push(this.drawDataLabel(row._x, row._y2[index] - 10, this.yLabelFormat_noUnit(row.y[index], 1000), color));\n                  } else {\n                    _results1.push(void 0);\n                  }\n                } else {\n                  _results1.push(void 0);\n                }\n              } else {\n                if (row.label_y[index] != null) {\n                  if (this.options.horizontal === !true) {\n                    _results1.push(this.drawDataLabel(row.label_x[index], row.label_y[index], this.yLabelFormat_noUnit(row.y[index], index), color));\n                  } else {\n                    _results1.push(this.drawDataLabelExt(row.label_x[index], row.label_y[index], this.yLabelFormat_noUnit(row.y[index]), 'start', color));\n                  }\n                } else if (row._y2[index] != null) {\n                  if (this.options.horizontal === !true) {\n                    _results1.push(this.drawDataLabel(row._x, row._y2[index] - 10, this.yLabelFormat_noUnit(row.y[index], index), color));\n                  } else {\n                    _results1.push(this.drawDataLabelExt(row._y2[index], row._x - 10, this.yLabelFormat_noUnit(row.y[index]), 'middle', color));\n                  }\n                } else {\n                  _results1.push(void 0);\n                }\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = Morris.extend({}, Morris.Hover.defaults, options);\n      this.el = document.createElement('div');\n      this.el.className = this.options[\"class\"];\n      this.el.style.display = 'none';\n      (this.options.parent = this.options.parent[0] || this.options.parent).appendChild(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y, centre_y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y, centre_y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.innerHTML = content;\n    };\n\n    Hover.prototype.moveTo = function(x, y, centre_y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top, _ref;\n      _ref = Morris.innerDimensions(this.options.parent), parentWidth = _ref.width, parentHeight = _ref.height;\n      hoverWidth = this.el.offsetWidth;\n      hoverHeight = this.el.offsetHeight;\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        if (centre_y === true) {\n          top = y - hoverHeight / 2;\n          if (top < 0) {\n            top = 0;\n          }\n        } else {\n          top = y - hoverHeight - 10;\n          if (top < 0) {\n            top = y + 10;\n            if (top + hoverHeight > parentHeight) {\n              top = parentHeight / 2 - hoverHeight / 2;\n            }\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      this.el.style.left = parseInt(left) + \"px\";\n      return this.el.style.top = parseInt(top) + \"px\";\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.style.display = '';\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.style.display = 'none';\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      pointSizeGrow: 3,\n      lineColors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529'],\n      extraClassLine: '',\n      extraClassCircle: '',\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      pointSuperimposed: true,\n      hoverOrdered: false,\n      hoverReversed: false,\n      smooth: true,\n      lineType: {},\n      shown: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 0,\n      verticalGrid: false,\n      verticalGridHeight: 'full',\n      verticalGridStartOffset: 0,\n      verticalGridType: '',\n      trendLine: false,\n      trendLineType: 'linear',\n      trendLineWidth: 2,\n      trendLineWeight: false,\n      trendLineColors: ['#689bc3', '#a2b3bf', '#64b764']\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var count, i, idx, ii, index, point, row, v, y, _i, _j, _k, _l, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3, _results;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii < this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results.push(this.transY(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        }).call(this);\n        row._y2 = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results.push(this.transY2(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        }).call(this);\n        row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if ((y != null) && this.hasToShow(i)) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        }).call(this)));\n        row._ymax2 = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y2;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if ((y != null) && this.hasToShow(i)) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        }).call(this)));\n      }\n      _ref1 = this.data;\n      for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n        row = _ref1[idx];\n        this.data[idx].label_x = [];\n        this.data[idx].label_y = [];\n        for (index = _k = _ref2 = this.options.ykeys.length - 1; _ref2 <= 0 ? _k <= 0 : _k >= 0; index = _ref2 <= 0 ? ++_k : --_k) {\n          if (row._y[index] != null) {\n            this.data[idx].label_x[index] = row._x;\n            this.data[idx].label_y[index] = row._y[index] - 10;\n          }\n          if (row._y2 != null) {\n            if (row._y2[index] != null) {\n              this.data[idx].label_x[index] = row._x;\n              this.data[idx].label_y[index] = row._y2[index] - 10;\n            }\n          }\n        }\n      }\n      if (this.options.pointSuperimposed === !true) {\n        _ref3 = this.data;\n        _results = [];\n        for (_l = 0, _len2 = _ref3.length; _l < _len2; _l++) {\n          row = _ref3[_l];\n          _results.push((function() {\n            var _len3, _len4, _m, _n, _ref4, _ref5, _results1;\n            _ref4 = row._y;\n            _results1 = [];\n            for (idx = _m = 0, _len3 = _ref4.length; _m < _len3; idx = ++_m) {\n              point = _ref4[idx];\n              count = 0;\n              _ref5 = row._y;\n              for (i = _n = 0, _len4 = _ref5.length; _n < _len4; i = ++_n) {\n                v = _ref5[i];\n                if (point === v && typeof point === 'number') {\n                  count++;\n                }\n              }\n              if (count > 1) {\n                row._y[idx] = row._y[idx] + count * (this.lineWidthForSeries(idx));\n                if (this.lineWidthForSeries(idx) > 1) {\n                  _results1.push(row._y[idx] = row._y[idx] - 1);\n                } else {\n                  _results1.push(void 0);\n                }\n              } else {\n                _results1.push(void 0);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var axis, content, j, jj, max, max_pos, order, row, y, yy, _i, _j, _k, _l, _len, _len1, _ref, _ref1, _ref2;\n      row = this.data[index];\n      content = \"\";\n      order = [];\n      if (this.options.hoverOrdered === true) {\n        _ref = row.y;\n        for (jj = _i = 0, _len = _ref.length; _i < _len; jj = ++_i) {\n          yy = _ref[jj];\n          max = null;\n          max_pos = -1;\n          _ref1 = row.y;\n          for (j = _j = 0, _len1 = _ref1.length; _j < _len1; j = ++_j) {\n            y = _ref1[j];\n            if (__indexOf.call(order, j) < 0) {\n              if (max <= y || max === null) {\n                max = y;\n                max_pos = j;\n              }\n            }\n          }\n          order.push(max_pos);\n        }\n      } else {\n        _ref2 = row.y;\n        for (jj = _k = _ref2.length - 1; _k >= 0; jj = _k += -1) {\n          yy = _ref2[jj];\n          order.push(jj);\n        }\n      }\n      if (this.options.hoverReversed === true) {\n        order = order.reverse();\n      }\n      axis = -1;\n      for (_l = order.length - 1; _l >= 0; _l += -1) {\n        j = order[_l];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        if (row.y[j] !== void 0 && axis === -1) {\n          axis = j;\n        }\n        content = (\"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(row.y[j], j)) + \"\\n</div>\") + content;\n      }\n      content = (\"<div class='morris-hover-row-label'>\" + row.label + \"</div>\") + content;\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (axis > this.options.nbYkeys2) {\n        return [content, row._x, row._ymax2];\n      } else {\n        return [content, row._x, row._ymax];\n      }\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, lineType, nb, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          lineType = smooth ? 'smooth' : 'jagged';\n          if (typeof this.options.lineType === \"string\") {\n            lineType = this.options.lineType;\n          } else {\n\n          }\n          if (this.options.lineType[this.options.ykeys[i]] !== void 0) {\n            lineType = this.options.lineType[this.options.ykeys[i]];\n          }\n          nb = this.options.ykeys.length - this.options.nbYkeys2;\n          if (i < nb) {\n            coords = (function() {\n              var _j, _len, _ref2, _results1;\n              _ref2 = this.data;\n              _results1 = [];\n              for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n                r = _ref2[_j];\n                if (r._y[i] !== void 0) {\n                  _results1.push({\n                    x: r._x,\n                    y: r._y[i]\n                  });\n                }\n              }\n              return _results1;\n            }).call(this);\n          } else {\n            coords = (function() {\n              var _j, _len, _ref2, _results1;\n              _ref2 = this.data;\n              _results1 = [];\n              for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n                r = _ref2[_j];\n                if (r._y2[i] !== void 0) {\n                  _results1.push({\n                    x: r._x,\n                    y: r._y2[i]\n                  });\n                }\n              }\n              return _results1;\n            }).call(this);\n          }\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, lineType, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, lines, prevAngleMargin, prevLabelMargin, row, ypos, _i, _j, _len, _len1, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < Morris.dimensions(_this.el).width) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n          if (_this.options.verticalGrid === true) {\n            return _this.drawVerticalGridLine(xpos);\n          }\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else if (this.options.customLabels) {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.options.customLabels;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        drawLabel(l[0], l[1]);\n      }\n      if (typeof this.options.verticalGrid === 'string') {\n        lines = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.verticalGrid);\n        _results = [];\n        for (_j = 0, _len1 = lines.length; _j < _len1; _j++) {\n          l = lines[_j];\n          _results.push(this.drawVerticalGridLine(l[1]));\n        }\n        return _results;\n      }\n    };\n\n    Line.prototype.drawVerticalGridLine = function(xpos) {\n      var yEnd, yStart;\n      xpos = Math.floor(this.transX(xpos)) + 0.5;\n      yStart = this.yStart + this.options.verticalGridStartOffset;\n      if (this.options.verticalGridHeight === 'full') {\n        yEnd = this.yEnd;\n      } else {\n        yEnd = this.yStart - this.options.verticalGridHeight;\n      }\n      return this.drawGridLineVert(\"M\" + xpos + \",\" + yStart + \"V\" + yEnd);\n    };\n\n    Line.prototype.drawGridLineVert = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth).attr('stroke-dasharray', this.options.verticalGridType);\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        if (this.hasToShow(i)) {\n          if (this.options.trendLine !== false && this.options.trendLine === true || this.options.trendLine[i] === true) {\n            this._drawTrendLine(i);\n          }\n          this._drawLineFor(i);\n        }\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        if (this.hasToShow(i)) {\n          _results.push(this._drawPointFor(i));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, idx, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        if (row._y2 != null) {\n          if (row._y2[index] != null) {\n            circle = this.drawLinePoint(row._x, row._y2[index], this.colorFor(row, index, 'point'), index);\n          }\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.prototype._drawTrendLine = function(index) {\n      var a, b, data, datapoints, i, path, plots, reg, sum_x, sum_xx, sum_xy, sum_y, t_off_x, t_x, t_y, val, weight, x, y, _i, _j, _k, _l, _len, _ref;\n      sum_x = 0;\n      sum_y = 0;\n      sum_xx = 0;\n      sum_xy = 0;\n      datapoints = 0;\n      plots = [];\n      _ref = this.data;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        val = _ref[i];\n        x = val.x;\n        y = val.y[index];\n        if (y != null) {\n          plots.push([x, y]);\n          if (this.options.trendLineWeight === false) {\n            weight = 1;\n          } else {\n            weight = this.options.data[i][this.options.trendLineWeight];\n          }\n          datapoints += weight;\n          sum_x += x * weight;\n          sum_y += y * weight;\n          sum_xx += x * x * weight;\n          sum_xy += x * y * weight;\n        }\n      }\n      a = (datapoints * sum_xy - sum_x * sum_y) / (datapoints * sum_xx - sum_x * sum_x);\n      b = (sum_y / datapoints) - ((a * sum_x) / datapoints);\n      data = [{}, {}];\n      data[0].x = this.transX(this.data[0].x);\n      data[0].y = this.transY(this.data[0].x * a + b);\n      data[1].x = this.transX(this.data[this.data.length - 1].x);\n      data[1].y = this.transY(this.data[this.data.length - 1].x * a + b);\n      if (this.options.trendLineType !== 'linear') {\n        if (typeof regression === 'function') {\n          t_off_x = (this.xmax - this.xmin) / 30;\n          data = [];\n          if (this.options.trendLineType === 'polynomial') {\n            reg = regression('polynomial', plots, 2);\n            for (i = _j = 0; _j <= 30; i = ++_j) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[2] * t_x * t_x + reg.equation[1] * t_x + reg.equation[0];\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          } else if (this.options.trendLineType === 'logarithmic') {\n            reg = regression('logarithmic', plots);\n            for (i = _k = 0; _k <= 30; i = ++_k) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[0] + reg.equation[1] * Math.log(t_x);\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          } else if (this.options.trendLineType === 'exponential') {\n            reg = regression('exponential', plots);\n            for (i = _l = 0; _l <= 30; i = ++_l) {\n              t_x = this.xmin + i * t_off_x;\n              t_y = reg.equation[0] + Math.exp(reg.equation[1] * t_x);\n              data.push({\n                x: this.transX(t_x),\n                y: this.transY(t_y)\n              });\n            }\n          }\n          console.log('Regression formula is: ' + reg.string + ', r2:' + reg.r2);\n        } else {\n          console.log('Warning: regression() is undefined, please ensure that regression.js is loaded');\n        }\n      }\n      if (!isNaN(a)) {\n        path = Morris.Line.createPath(data, 'jagged', this.bottom);\n        return path = this.raphael.path(path).attr('stroke', this.colorFor(null, index, 'trendLine')).attr('stroke-width', this.options.trendLineWidth);\n      }\n    };\n\n    Line.createPath = function(coords, lineType, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (lineType === 'smooth') {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (lineType === 'smooth') {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'jagged') {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'step') {\n              path += \"L\" + coord.x + \",\" + prevCoord.y;\n              path += \"L\" + coord.x + \",\" + coord.y;\n            } else if (lineType === 'stepNoRiser') {\n              path += \"L\" + coord.x + \",\" + prevCoord.y;\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (lineType !== 'smooth' || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i) && this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.hasToShow(i) && this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else if (type === 'trendLine') {\n        return this.options.trendLineColors[sidx % this.options.trendLineColors.length];\n      } else {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      }\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      var ii, rPath, row, straightPath, _i, _len, _ref,\n        _this = this;\n      if (this.options.animate) {\n        straightPath = '';\n        _ref = this.data;\n        for (ii = _i = 0, _len = _ref.length; _i < _len; ii = ++_i) {\n          row = _ref[ii];\n          if (straightPath === '') {\n            if (lineIndex >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (row._y2[lineIndex] != null) {\n                straightPath = 'M' + row._x + ',' + this.transY2(this.ymin2);\n              }\n            } else if (row._y[lineIndex] != null) {\n              straightPath = 'M' + row._x + ',' + this.transY(this.ymin);\n            }\n          } else {\n            if (lineIndex >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (row._y2[lineIndex] != null) {\n                straightPath += ',' + row._x + ',' + this.transY2(this.ymin2);\n                if (this.options.lineType === 'step') {\n                  straightPath += ',' + row._x + ',' + this.transY2(this.ymin2);\n                }\n              }\n            } else if (row._y[lineIndex] != null) {\n              straightPath += ',' + row._x + ',' + this.transY(this.ymin);\n              if (this.options.lineType === 'step') {\n                straightPath += ',' + row._x + ',' + this.transY(this.ymin);\n              }\n            }\n          }\n        }\n        rPath = this.raphael.path(straightPath).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex)).attr('class', this.options.extraClassLine).attr('class', 'line_' + lineIndex);\n        if (this.options.cumulative) {\n          return (function(rPath, path) {\n            return rPath.animate({\n              path: path\n            }, 600, '<>');\n          })(rPath, path);\n        } else {\n          return (function(rPath, path) {\n            return rPath.animate({\n              path: path\n            }, 500, '<>');\n          })(rPath, path);\n        }\n      } else {\n        return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex)).attr('class', this.options.extraClassLine).attr('class', 'line_' + lineIndex);\n      }\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex)).attr('class', this.options.extraClassCircle).attr('class', 'circle_line_' + lineIndex);\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      if (this.pointSizeForSeries(index) === 0) {\n        return;\n      }\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + this.options.pointSizeGrow\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = Morris.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false,\n      belowArea: true,\n      areaColors: []\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = Morris.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var i, idx, index, row, total, y, _i, _j, _len, _len1, _ref, _ref1, _results;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row.y;\n          _results = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              if (y != null) {\n                _results.push(this.transY(y));\n              } else {\n                _results.push(y);\n              }\n            } else {\n              if (y != null) {\n                total += y || 0;\n                _results.push(this.transY(total));\n              } else {\n                _results.push(void 0);\n              }\n            }\n          }\n          return _results;\n        }).call(this);\n        row._ymax = Math.max.apply(Math, [].concat((function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = row._y;\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            y = _ref1[i];\n            if (y != null) {\n              _results.push(y);\n            }\n          }\n          return _results;\n        })()));\n      }\n      _ref1 = this.data;\n      _results = [];\n      for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n        row = _ref1[idx];\n        this.data[idx].label_x = [];\n        this.data[idx].label_y = [];\n        _results.push((function() {\n          var _k, _ref2, _results1;\n          _results1 = [];\n          for (index = _k = _ref2 = this.options.ykeys.length - 1; _ref2 <= 0 ? _k <= 0 : _k >= 0; index = _ref2 <= 0 ? ++_k : --_k) {\n            if (row._y[index] != null) {\n              this.data[idx].label_x[index] = row._x;\n              this.data[idx].label_y[index] = row._y[index] - 10;\n            }\n            if (row._y2 != null) {\n              if (row._y2[index] != null) {\n                this.data[idx].label_x[index] = row._x;\n                _results1.push(this.data[idx].label_y[index] = row._y2[index] - 10);\n              } else {\n                _results1.push(void 0);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _l, _len, _len1, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n      }\n      _results2 = [];\n      for (_l = 0, _len1 = range.length; _l < _len1; _l++) {\n        i = range[_l];\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var coords, path, pathBelow, r;\n      path = this.paths[index];\n      if (path !== null) {\n        if (this.options.belowArea === true) {\n          path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n          return this.drawFilledPath(path, this.fillForSeries(index), index);\n        } else {\n          coords = (function() {\n            var _i, _ref, _results;\n            _ref = this.data;\n            _results = [];\n            for (_i = _ref.length - 1; _i >= 0; _i += -1) {\n              r = _ref[_i];\n              if (r._y[0] !== void 0) {\n                _results.push({\n                  x: r._x,\n                  y: r._y[0]\n                });\n              }\n            }\n            return _results;\n          }).call(this);\n          pathBelow = Morris.Line.createPath(coords, 'smooth', this.bottom);\n          path = path + \"L\" + pathBelow.slice(1);\n          return this.drawFilledPath(path, this.fillForSeries(index), index);\n        }\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      if (this.options.areaColors.length === 0) {\n        this.options.areaColors = this.options.lineColors;\n      }\n      color = Raphael.rgb2hsl(this.options.areaColors[i % this.options.areaColors.length]);\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill, areaIndex) {\n      var coords, pathBelow, r, rPath, straightPath,\n        _this = this;\n      if (this.options.animate) {\n        coords = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            r = _ref[_i];\n            if (r._y[areaIndex] !== void 0) {\n              _results.push({\n                x: r._x,\n                y: this.transY(0)\n              });\n            }\n          }\n          return _results;\n        }).call(this);\n        straightPath = Morris.Line.createPath(coords, 'smooth', this.bottom);\n        if (this.options.belowArea === true) {\n          straightPath = straightPath + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        } else {\n          coords = (function() {\n            var _i, _ref, _results;\n            _ref = this.data;\n            _results = [];\n            for (_i = _ref.length - 1; _i >= 0; _i += -1) {\n              r = _ref[_i];\n              if (r._y[areaIndex] !== void 0) {\n                _results.push({\n                  x: r._x,\n                  y: this.transY(0)\n                });\n              }\n            }\n            return _results;\n          }).call(this);\n          pathBelow = Morris.Line.createPath(coords, 'smooth', this.bottom);\n          straightPath = straightPath + \"L\" + pathBelow.slice(1);\n        }\n        straightPath += 'Z';\n        rPath = this.raphael.path(straightPath).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n      }\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, Morris.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529'],\n      barOpacity: 1.0,\n      barHighlightOpacity: 1.0,\n      highlightSpeed: 150,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 0,\n      horizontal: false,\n      stacked: false,\n      shown: true,\n      showZero: true,\n      inBarValue: false,\n      inBarValueTextColor: 'white',\n      inBarValueMinTopMargin: 1,\n      inBarValueRightMargin: 4,\n      rightAxisBar: false\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, ii, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.xStart + this.xSize * (idx + 0.5) / this.data.length;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii < this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results1.push(this.transY(y));\n              } else {\n                _results1.push(null);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._y2 = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (ii = _j = 0, _len1 = _ref1.length; _j < _len1; ii = ++_j) {\n            y = _ref1[ii];\n            if (ii >= this.options.ykeys.length - this.options.nbYkeys2) {\n              if (y != null) {\n                _results1.push(this.transY2(y));\n              } else {\n                _results1.push(null);\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.rightAxisBar === !true) {\n        this.drawBarLine();\n        return this.drawBarPoints();\n      }\n    };\n\n    Bar.prototype.drawBarLine = function() {\n      var coord, coords, dim, g, grads, i, ii, ix, lg, nb, path, prevCoord, r, rPath, straightPath, x1, x2, y1, y2, _i, _j, _len, _len1, _ref, _results,\n        _this = this;\n      nb = this.options.ykeys.length - this.options.nbYkeys2;\n      _ref = this.options.ykeys.slice(nb, this.options.ykeys.length);\n      _results = [];\n      for (ii = _i = 0, _len = _ref.length; _i < _len; ii = _i += 1) {\n        dim = _ref[ii];\n        path = \"\";\n        straightPath = \"\";\n        if (this.options.horizontal === !true) {\n          coords = (function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.data;\n            _results1 = [];\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              r = _ref1[_j];\n              if (r._y2[nb + ii] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y2[nb + ii]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n        } else {\n          coords = (function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = this.data;\n            _results1 = [];\n            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n              r = _ref1[_j];\n              if (r._y2[nb + ii] !== void 0) {\n                _results1.push({\n                  x: r._y2[nb + ii],\n                  y: r._x\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n        }\n        if (this.options.smooth) {\n          grads = Morris.Line.gradients(coords);\n        }\n        prevCoord = {\n          y: null\n        };\n        for (i = _j = 0, _len1 = coords.length; _j < _len1; i = ++_j) {\n          coord = coords[i];\n          if (coord.y != null) {\n            if (prevCoord.y != null) {\n              if (this.options.smooth && this.options.horizontal === !true) {\n                g = grads[i];\n                lg = grads[i - 1];\n                ix = (coord.x - prevCoord.x) / 4;\n                x1 = prevCoord.x + ix;\n                y1 = Math.min(this.bottom, prevCoord.y + ix * lg);\n                x2 = coord.x - ix;\n                y2 = Math.min(this.bottom, coord.y - ix * g);\n                path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n              } else {\n                path += \"L\" + coord.x + \",\" + coord.y;\n              }\n              if (this.options.horizontal === true) {\n                straightPath += 'L' + this.transY(0) + ',' + coord.y;\n              } else {\n                straightPath += 'L' + coord.x + ',' + this.transY(0);\n              }\n            } else {\n              if (!this.options.smooth || (grads[i] != null)) {\n                path += \"M\" + coord.x + \",\" + coord.y;\n                if (this.options.horizontal === true) {\n                  straightPath += 'M' + this.transY(0) + ',' + coord.y;\n                } else {\n                  straightPath += 'M' + coord.x + ',' + this.transY(0);\n                }\n              }\n            }\n          }\n          prevCoord = coord;\n        }\n        if (path !== \"\") {\n          if (this.options.animate) {\n            rPath = this.raphael.path(straightPath).attr('stroke', this.options.barColors[nb + ii]).attr('stroke-width', 3);\n            _results.push((function(rPath, path) {\n              return rPath.animate({\n                path: path\n              }, 500, '<>');\n            })(rPath, path));\n          } else {\n            _results.push(rPath = this.raphael.path(path).attr('stroke', this.options.barColors[nb + ii]).attr('stroke-width', 3));\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawBarPoints = function() {\n      var circle, dim, idx, ii, nb, row, _i, _len, _ref, _results;\n      nb = this.options.ykeys.length - this.options.nbYkeys2;\n      this.seriesPoints = [];\n      _ref = this.options.ykeys.slice(nb, this.options.ykeys.length);\n      _results = [];\n      for (ii = _i = 0, _len = _ref.length; _i < _len; ii = _i += 1) {\n        dim = _ref[ii];\n        this.seriesPoints[ii] = [];\n        _results.push((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = this.data;\n          _results1 = [];\n          for (idx = _j = 0, _len1 = _ref1.length; _j < _len1; idx = ++_j) {\n            row = _ref1[idx];\n            circle = null;\n            if (row._y2[nb + ii] != null) {\n              if (this.options.horizontal === !true) {\n                circle = this.raphael.circle(row._x, row._y2[nb + ii], 4).attr('fill', this.options.barColors[nb + ii]).attr('stroke-width', 1).attr('stroke', '#ffffff');\n                _results1.push(this.seriesPoints[ii].push(circle));\n              } else {\n                circle = this.raphael.circle(row._y2[nb + ii], row._x, 4).attr('fill', this.options.barColors[nb + ii]).attr('stroke-width', 1).attr('stroke', '#ffffff');\n                _results1.push(this.seriesPoints[ii].push(circle));\n              }\n            } else {\n              _results1.push(void 0);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var angle, basePos, height, i, label, labelBox, margin, maxSize, offset, prevAngleMargin, prevLabelMargin, row, size, startPos, textBox, width, _i, _ref, _ref1, _results;\n      if (!this.options.horizontal) {\n        basePos = this.getXAxisLabelY();\n      } else {\n        basePos = this.getYAxisLabelX();\n      }\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        if (!this.options.horizontal) {\n          label = this.drawXAxisLabel(row._x, basePos, row.label);\n        } else {\n          label = this.drawYAxisLabel(basePos, row._x - 0.5 * this.options.gridTextSize, row.label, 1);\n        }\n        if (!this.options.horizontal) {\n          angle = this.options.xLabelAngle;\n        } else {\n          angle = 0;\n        }\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-angle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (angle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(angle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        _ref1 = Morris.dimensions(this.el), width = _ref1.width, height = _ref1.height;\n        if (!this.options.horizontal) {\n          startPos = labelBox.x;\n          size = labelBox.width;\n          maxSize = width;\n        } else {\n          startPos = labelBox.y;\n          size = labelBox.height;\n          maxSize = height;\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= startPos + size || (prevAngleMargin != null) && prevAngleMargin >= startPos) && startPos >= 0 && (startPos + size) < maxSize) {\n          if (angle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(angle * Math.PI / 180.0);\n            prevAngleMargin = startPos - margin;\n          }\n          if (!this.options.horizontal) {\n            _results.push(prevLabelMargin = startPos - this.options.xLabelMargin);\n          } else {\n            _results.push(prevLabelMargin = startPos);\n          }\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.getXAxisLabelY = function() {\n      return this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barMiddle, barWidth, bottom, depth, groupWidth, i, idx, lastTop, left, leftPadding, nb, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos, _i, _ref;\n      this.seriesBars = [];\n      groupWidth = this.xSize / this.options.data.length;\n      if (this.options.stacked) {\n        numBars = 1;\n      } else {\n        numBars = 0;\n        for (i = _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i)) {\n            numBars += 1;\n          }\n        }\n      }\n      if (this.options.stacked === !true && this.options.rightAxisBar === false) {\n        numBars = numBars - this.options.nbYkeys2;\n      }\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _j, _len, _ref1, _results;\n        _ref1 = this.data;\n        _results = [];\n        for (idx = _j = 0, _len = _ref1.length; _j < _len; idx = ++_j) {\n          row = _ref1[idx];\n          this.data[idx].label_x = [];\n          this.data[idx].label_y = [];\n          this.seriesBars[idx] = [];\n          lastTop = 0;\n          if (this.options.rightAxisBar === true) {\n            nb = row._y.length;\n          } else {\n            nb = row._y.length - this.options.nbYkeys2;\n          }\n          _results.push((function() {\n            var _k, _len1, _ref2, _results1;\n            _ref2 = row._y.slice(0, nb);\n            _results1 = [];\n            for (sidx = _k = 0, _len1 = _ref2.length; _k < _len1; sidx = ++_k) {\n              ypos = _ref2[sidx];\n              if (row._y[sidx] != null) {\n                ypos = row._y[sidx];\n              } else if (row._y2[sidx] != null) {\n                ypos = row._y2[sidx];\n              }\n              if (!this.hasToShow(sidx)) {\n                continue;\n              }\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.xStart + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  if (!this.options.horizontal) {\n                    this.drawBar(this.xStart + idx * groupWidth, this.yEnd, groupWidth, this.ySize, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  } else {\n                    this.drawBar(this.yStart, this.xStart + idx * groupWidth, this.ySize, groupWidth, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  }\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                if (!this.options.horizontal) {\n                  lastTop += size;\n                  if (size === 0 && this.options.showZero) {\n                    size = 1;\n                  }\n                  this.seriesBars[idx][sidx] = this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  if (this.options.dataLabels) {\n                    if (this.options.dataLabelsPosition === 'inside' || (this.options.stacked && this.options.dataLabelsPosition !== 'force_outside')) {\n                      depth = size / 2;\n                    } else {\n                      depth = -7;\n                    }\n                    if (size > this.options.dataLabelsSize || !this.options.stacked || this.options.dataLabelsPosition === 'force_outside') {\n                      this.data[idx].label_x[sidx] = left + barWidth / 2;\n                      _results1.push(this.data[idx].label_y[sidx] = top + depth);\n                    } else {\n                      _results1.push(void 0);\n                    }\n                  } else {\n                    _results1.push(void 0);\n                  }\n                } else {\n                  lastTop -= size;\n                  if (size === 0) {\n                    size = 1;\n                  }\n                  this.seriesBars[idx][sidx] = this.drawBar(top, left, size, barWidth, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  if (this.options.dataLabels) {\n                    if (this.options.stacked || this.options.dataLabelsPosition === 'inside') {\n                      this.data[idx].label_x[sidx] = top + size / 2;\n                      this.data[idx].label_y[sidx] = left + barWidth / 2;\n                    } else {\n                      this.data[idx].label_x[sidx] = top + size + 5;\n                      this.data[idx].label_y[sidx] = left + barWidth / 2;\n                    }\n                  }\n                  if (this.options.inBarValue && barWidth > this.options.gridTextSize + 2 * this.options.inBarValueMinTopMargin) {\n                    barMiddle = left + 0.5 * barWidth;\n                    _results1.push(this.raphael.text(bottom - this.options.inBarValueRightMargin, barMiddle, this.yLabelFormat(row.y[sidx], sidx)).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.inBarValueTextColor).attr('text-anchor', 'end'));\n                  } else {\n                    _results1.push(void 0);\n                  }\n                }\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.hilight = function(index) {\n      var i, y, _i, _j, _len, _len1, _ref, _ref1;\n      if (this.seriesBars && this.seriesBars[this.prevHilight] && this.prevHilight !== null && this.prevHilight !== index) {\n        _ref = this.seriesBars[this.prevHilight];\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          y = _ref[i];\n          if (y) {\n            y.animate({\n              'fill-opacity': this.options.barOpacity\n            }, this.options.highlightSpeed);\n          }\n        }\n      }\n      if (this.seriesBars && this.seriesBars[index] && index !== null && this.prevHilight !== index) {\n        _ref1 = this.seriesBars[index];\n        for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n          y = _ref1[i];\n          if (y) {\n            y.animate({\n              'fill-opacity': this.options.barHighlightOpacity\n            }, this.options.highlightSpeed);\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label,\n          src: row.src\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x, y) {\n      var bodyRect, pos;\n      if (this.data.length === 0) {\n        return null;\n      }\n      if (!this.options.horizontal) {\n        pos = x;\n      } else {\n        bodyRect = document.body.getBoundingClientRect();\n        pos = y + bodyRect.top;\n      }\n      pos = Math.max(Math.min(pos, this.xEnd), this.xStart);\n      return Math.min(this.data.length - 1, Math.floor((pos - this.xStart) / (this.xSize / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x, y);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x, y);\n      this.hilight(index);\n      if (index != null) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n      } else {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      this.hilight(-1);\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, inv, j, jj, row, x, y, _i, _j, _len, _len1, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      inv = [];\n      _ref = row.y;\n      for (jj = _i = 0, _len = _ref.length; _i < _len; jj = ++_i) {\n        y = _ref[jj];\n        inv.unshift(y);\n      }\n      for (jj = _j = 0, _len1 = inv.length; _j < _len1; jj = ++_j) {\n        y = inv[jj];\n        j = row.y.length - 1 - jj;\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (!this.options.horizontal) {\n        x = this.left + (index + 0.5) * this.width / this.data.length;\n        return [content, x];\n      } else {\n        x = this.left + 0.5 * this.width;\n        y = this.top + (index + 0.5) * this.height / this.data.length;\n        return [content, x, y, true];\n      }\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (this.options.animate) {\n        if (this.options.horizontal) {\n          if (maxRadius === 0 || maxRadius > height) {\n            path = this.raphael.rect(this.transY(0), yPos, 0, height).animate({\n              x: xPos,\n              width: width\n            }, 500);\n          } else {\n            path = this.raphael.path(this.roundedRect(this.transY(0), yPos + height, width, 0, radiusArray).animate({\n              y: yPos,\n              height: height\n            }, 500));\n          }\n        } else {\n          if (maxRadius === 0 || maxRadius > height) {\n            path = this.raphael.rect(xPos, this.transY(0), width, 0).animate({\n              y: yPos,\n              height: height\n            }, 500);\n          } else {\n            path = this.raphael.path(this.roundedRect(xPos, this.transY(0), width, 0, radiusArray).animate({\n              y: yPos,\n              height: height\n            }, 500));\n          }\n        }\n      } else {\n        if (maxRadius === 0 || maxRadius > height) {\n          path = this.raphael.rect(xPos, yPos, width, height);\n        } else {\n          path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n        }\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#2f7df6', '#53a351', '#f6c244', '#cb444a', '#4aa0b5', '#222529', '#44a1f8', '#81d453', '#f0bb40', '#eb3f25', '#b45184', '#5f5f5f'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      padding: 0,\n      formatter: Morris.commas,\n      resize: true,\n      dataLabels: false,\n      dataLabelsPosition: 'inside',\n      dataLabelsFamily: 'sans-serif',\n      dataLabelsSize: 12,\n      dataLabelsWeight: 'normal',\n      dataLabelsColor: 'auto',\n      noDataLabel: 'No data for this chart',\n      noDataLabelSize: 21,\n      noDataLabelWeight: 'bold',\n      donutType: 'donut',\n      animate: true,\n      showPercentage: false,\n      postUnits: '',\n      preUnits: ''\n    };\n\n    function Donut(options) {\n      this.debouncedResizeHandler = __bind(this.debouncedResizeHandler, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var cx, cy, height, width, _ref;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = Morris.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = document.getElementById(options.element);\n      } else {\n        this.el = options.element[0] || options.element;\n      }\n      if (this.el === null) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      this.raphael = new Raphael(this.el);\n      if (options.data === void 0 || options.data.length === 0) {\n        _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n        cx = width / 2;\n        cy = height / 2;\n        this.raphael.text(cx, cy, this.options.noDataLabel).attr('text-anchor', 'middle').attr('font-size', this.options.noDataLabelSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.noDataLabelWeight).attr('fill', this.options.dataLabelsColor);\n        return;\n      }\n      if (this.options.resize) {\n        Morris.on(window, 'resize', this.resizeHandler);\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.destroy = function() {\n      if (this.options.resize) {\n        window.clearTimeout(this.timeoutId);\n        return Morris.off(window, 'resize', this.resizeHandler);\n      }\n    };\n\n    Donut.prototype.redraw = function() {\n      var C, color, cx, cy, dist, finalValue, height, i, idx, label_x, label_y, last, max_value, min, next, p_cos_p0, p_sin_p0, seg, total, value, w, width, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3, _results;\n      this.raphael.clear();\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      cx = width / 2;\n      cy = height / 2;\n      w = (Math.min(cx, cy) - 10) / 3 - this.options.padding;\n      total = 0;\n      _ref1 = this.values;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        value = _ref1[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref2 = this.values;\n      for (i = _j = 0, _len1 = _ref2.length; _j < _len1; i = ++_j) {\n        value = _ref2[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael, this.options);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        seg.on('mouseout', this.deselect);\n        if (parseFloat(seg.raphael.height) > parseFloat(height)) {\n          dist = height * 2 - this.options.padding * 7;\n        } else {\n          dist = seg.raphael.height - this.options.padding * 7;\n        }\n        if (this.options.dataLabels && this.values.length > 1) {\n          p_sin_p0 = Math.sin((last + next) / 2);\n          p_cos_p0 = Math.cos((last + next) / 2);\n          if (this.options.dataLabelsPosition === 'inside') {\n            if (this.options.donutType === 'pie') {\n              label_x = parseFloat(cx) + parseFloat(dist * 0.30 * p_sin_p0);\n              label_y = parseFloat(cy) + parseFloat(dist * 0.30 * p_cos_p0);\n            } else {\n              label_x = parseFloat(cx) + parseFloat(dist * 0.39 * p_sin_p0);\n              label_y = parseFloat(cy) + parseFloat(dist * 0.39 * p_cos_p0);\n            }\n          } else {\n            label_x = parseFloat(cx) + parseFloat((dist - 9) * 0.5 * p_sin_p0);\n            label_y = parseFloat(cy) + parseFloat((dist - 9) * 0.5 * p_cos_p0);\n          }\n          if (this.options.dataLabelsColor !== 'auto') {\n            color = this.options.dataLabelsColor;\n          } else if (this.options.dataLabelsPosition === 'inside' && this.isColorDark(this.options.colors[i]) === true) {\n            color = '#fff';\n          } else {\n            color = '#000';\n          }\n          if (this.options.showPercentage) {\n            finalValue = Math.round(parseFloat(value) / parseFloat(total) * 100) + '%';\n            this.drawDataLabelExt(label_x, label_y, finalValue, color);\n          } else {\n            this.drawDataLabelExt(label_x, label_y, this.options.preUnits + value + this.options.postUnits, color);\n          }\n        }\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      if (this.options.donutType === 'donut') {\n        _ref3 = this.values;\n        _results = [];\n        for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {\n          value = _ref3[_k];\n          if (value === max_value) {\n            this.select(idx);\n            break;\n          }\n          _results.push(idx += 1);\n        }\n        return _results;\n      }\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.drawDataLabel = function(xPos, yPos, text, color) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('text-anchor', 'middle').attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', this.options.dataLabelsColor);\n    };\n\n    Donut.prototype.drawDataLabelExt = function(xPos, yPos, text, color) {\n      var label, labelAnchor;\n      if (this.options.dataLabelsPosition === 'inside') {\n        labelAnchor = 'middle';\n      } else if (xPos > this.raphael.width / 2) {\n        labelAnchor = 'start';\n      } else if (xPos > this.raphael.width * 0.55 && xPos < this.raphael.width * 0.45) {\n        labelAnchor = 'middle';\n      } else {\n        labelAnchor = 'end';\n      }\n      return label = this.raphael.text(xPos, yPos, text, color).attr('text-anchor', labelAnchor).attr('font-size', this.options.dataLabelsSize).attr('font-family', this.options.dataLabelsFamily).attr('font-weight', this.options.dataLabelsWeight).attr('fill', color);\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      if (this.options.donutType === 'donut') {\n        return this.setLabels(row.label, this.options.formatter(row.value, row));\n      }\n    };\n\n    Donut.prototype.deselect = function(idx) {\n      var s, _i, _len, _ref, _results;\n      _ref = this.segments;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        _results.push(s.deselect());\n      }\n      return _results;\n    };\n\n    Donut.prototype.isColorDark = function(hex) {\n      var b, g, luma, r, rgb;\n      if (hex != null) {\n        hex = hex.substring(1);\n        rgb = parseInt(hex, 16);\n        r = (rgb >> 16) & 0xff;\n        g = (rgb >> 8) & 0xff;\n        b = (rgb >> 0) & 0xff;\n        luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        if (luma >= 128) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var height, inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale, width, _ref;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      inner = (Math.min(width / 2, height / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      if (this.timeoutId != null) {\n        window.clearTimeout(this.timeoutId);\n      }\n      return this.timeoutId = window.setTimeout(this.debouncedResizeHandler, 100);\n    };\n\n    Donut.prototype.debouncedResizeHandler = function() {\n      var height, width, _ref;\n      this.timeoutId = null;\n      _ref = Morris.dimensions(this.el), width = _ref.width, height = _ref.height;\n      this.raphael.setSize(width, height);\n      this.options.animate = false;\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael, options) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.options = options;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      if (this.options.donutType === 'pie') {\n        return (\"M\" + ox0 + \",\" + oy0) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",0,\" + ox1 + \",\" + oy1) + (\"L\" + this.cx + \",\" + this.cy) + \"Z\";\n      } else {\n        return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n      }\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      if (!/NaN/.test(this.hilight)) {\n        this.arc = this.drawDonutArc(this.hilight, this.color);\n      }\n      if (!/NaN/.test(this.path)) {\n        return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n          return _this.fire('hover', _this.index);\n        }, function() {\n          return _this.fire('click', _this.index);\n        }, function() {\n          return _this.fire('mouseout', _this.index);\n        });\n      }\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      var rPath,\n        _this = this;\n      if (this.options.animate) {\n        rPath = this.raphael.path(\"M\" + this.cx + \",\" + this.cy + \"Z\").attr({\n          stroke: color,\n          'stroke-width': 2,\n          opacity: 0\n        });\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        return this.raphael.path(path).attr({\n          stroke: color,\n          'stroke-width': 2,\n          opacity: 0\n        });\n      }\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction, leaveFunction) {\n      var rPath, straightDots, straightPath,\n        _this = this;\n      if (this.options.animate && this.options.donutType === 'pie') {\n        straightPath = path;\n        straightPath = path.replace('A', ',');\n        straightPath = straightPath.replace('M', '');\n        straightPath = straightPath.replace('C', ',');\n        straightPath = straightPath.replace('Z', '');\n        straightDots = straightPath.split(',');\n        if (this.options.donutType === 'pie') {\n          straightPath = 'M' + straightDots[0] + ',' + straightDots[1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + 'Z';\n        } else {\n          straightPath = 'M' + straightDots[0] + ',' + straightDots[1] + ',' + straightDots[straightDots.length - 2] + ',' + straightDots[straightDots.length - 1] + 'Z';\n        }\n        rPath = this.raphael.path(straightPath).attr({\n          fill: fillColor,\n          stroke: strokeColor,\n          'stroke-width': 3\n        }).hover(hoverFunction).click(clickFunction).mouseout(leaveFunction);\n        return (function(rPath, path) {\n          return rPath.animate({\n            path: path\n          }, 500, '<>');\n        })(rPath, path);\n      } else {\n        if (this.options.donutType === 'pie') {\n          return this.raphael.path(path).attr({\n            fill: fillColor,\n            stroke: strokeColor,\n            'stroke-width': 3\n          }).hover(hoverFunction).click(clickFunction).mouseout(leaveFunction);\n        } else {\n          return this.raphael.path(path).attr({\n            fill: fillColor,\n            stroke: strokeColor,\n            'stroke-width': 3\n          }).hover(hoverFunction).click(clickFunction);\n        }\n      }\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        if (this.seg != null) {\n          this.seg.animate({\n            path: this.selectedPath\n          }, 150, '<>');\n          this.arc.animate({\n            opacity: 1\n          }, 150, '<>');\n          return this.selected = true;\n        }\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.js\n// module id = 2\n// module chunks = 0","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 3\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js!./morris.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.css\n// module id = 4\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./area-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-09e4663f!../../node_modules/vue-loader/lib/selector?type=template&index=0!./area-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/area-chart.vue\n// module id = 5\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./bar-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-8f45d5da!../../node_modules/vue-loader/lib/selector?type=template&index=0!./bar-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/bar-chart.vue\n// module id = 6\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./donut-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-6c3570bc!../../node_modules/vue-loader/lib/selector?type=template&index=0!./donut-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/donut-chart.vue\n// module id = 7\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./line-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-16bb1e34!../../node_modules/vue-loader/lib/selector?type=template&index=0!./line-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/line-chart.vue\n// module id = 8\n// module chunks = 0","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'area-chart',\n\n  mixins: [ ChartProps.area ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['lineColors']) {\n          this.chart.options['lineColors'] = Converter.toObject(this['lineColors'])\n        }\n        \n        this.chart.setData(Converter.toObject(this.data))\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      resize: Converter.toBoolean(this.resize),\n      labels: Converter.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: Converter.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: Converter.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity,\n      behaveLikeLine: this.behaveLikeLine\n    }\n\n    this.addOptionAsObject('lineColors', options)\n    this.addOption('xLabels', options)\n    this.addOptionAsObject('pointFillColors', options)\n    this.addOptionAsObject('pointStrokeColors', options)\n    this.addOption('dateFormat', options)\n    this.addOption('xLabelFormat', options)\n    this.addOption('yLabelFormat', options)\n    this.addOptionAsObject('goals', options)\n    this.addOptionAsObject('goalLineColors', options)\n    this.addOptionAsObject('events', options)\n    this.addOptionAsObject('eventLineColors', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Area(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// area-chart.vue?238ec1ec","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'bar-chart',\n\n  mixins: [ ChartProps.bar ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['barColors']) {\n          this.chart.options['barColors'] = Converter.toObject(this['barColors'])\n        }\n\n        this.chart.setData(this.data)\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      labels: Converter.toObject(this.labels),\n      resize: Converter.toBoolean(this.resize),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      axes: Converter.toBoolean(this.axes),\n      ymax: this.ymax,\n      ymin: this.ymin,\n      hideHover: this.hideHover,\n      horizontal: Converter.toBoolean(this.horizontal),\n      stacked: Converter.toBoolean(this.stacked),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize\n    }\n\n    this.addOptionAsObject('barColors', options)\n    this.addOption('xLabelFormat', options)\n    this.addOption('yLabelFormat', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Bar(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// bar-chart.vue?7c1ab168","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport \"morris.js/morris\";\nimport \"morris.js/morris.css\";\nimport Converter from \"../util/converter\";\nimport ChartProps from \"./chart-mixins\";\n\nexport default {\n  name: \"donut-chart\",\n\n  mixins: [ChartProps.donut],\n\n  data() {\n    return {\n      chart: null\n    };\n  },\n\n  watch: {\n    data(val) {\n      this.$nextTick(() => {\n        if (this.data && this.data.length > 0 && !this.chart) {\n          this.createChart();\n        }\n\n        if (this.chart) {\n          if (this[\"colors\"]) {\n            this.chart.options[\"colors\"] = Converter.toObject(this[\"colors\"]);\n          }\n\n          this.chart.setData(Converter.toObject(this.data));\n        }\n      });\n    }\n  },\n\n  mounted() {\n    if (this.data && this.data.length > 0) {\n      this.createChart();\n    }\n  },\n\n  methods: {\n    createChart() {\n      let options = {\n        element: this.id,\n        data: Converter.toObject(this.data),\n        resize: Converter.toBoolean(this.resize),\n        donutType: this.donutType,\n        dataLabels: Converter.toBoolean(this.dataLabels),\n        dataLabelsPosition: this.dataLabelsPosition,\n        showPercentage: Converter.toBoolean(this.showPercentage)\n      };\n\n      this.addOptionAsObject(\"colors\", options);\n      this.addOption(\"formatter\", options);\n      this.addOption(\"donutType\", options);\n      this.addOption(\"dataLabels\", options);\n      this.addOption(\"dataLabelsPosition\", options);\n      this.addOption(\"showPercentage\", options);\n\n      this.chart = Morris.Donut(options);\n    }\n  }\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// donut-chart.vue?f2b0ca34","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'line-chart',\n\n  mixins: [ ChartProps.line ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['lineColors']) {\n          this.chart.options['lineColors'] = Converter.toObject(this['lineColors'])\n        }\n\n        this.chart.setData(Converter.toObject(this.data))\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      resize: Converter.toBoolean(this.resize),\n      labels: Converter.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: Converter.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: Converter.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity\n    }\n\n    this.addOptionAsObject('lineColors', options)\n    this.addOption('xLabels', options)\n    this.addOptionAsObject('pointFillColors', options)\n    this.addOptionAsObject('pointStrokeColors', options)\n    this.addOption('dateFormat', options)\n    this.addOption('xLabelFormat', options)\n    this.addOption('yLabelFormat', options)\n    this.addOptionAsObject('goals', options)\n    this.addOptionAsObject('goalLineColors', options)\n    this.addOptionAsObject('events', options)\n    this.addOptionAsObject('eventLineColors', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Line(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// line-chart.vue?5fb55a26","import DonutChart from './components/donut-chart.vue'\nimport BarChart from './components/bar-chart.vue'\nimport LineChart from './components/line-chart.vue'\nimport AreaChart from './components/area-chart.vue'\n\nconst VueMorris = {\n  DonutChart, BarChart, LineChart, AreaChart\n}\n\nmodule.exports = VueMorris\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","exports = module.exports = require(\"../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}@media print{.morris-hover{display:none}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/morris.js/morris.css\n// module id = 14\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-09e4663f!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/area-chart.vue\n// module id = 16\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-16bb1e34!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/line-chart.vue\n// module id = 17\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-6c3570bc!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/donut-chart.vue\n// module id = 18\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-8f45d5da!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/bar-chart.vue\n// module id = 19\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}